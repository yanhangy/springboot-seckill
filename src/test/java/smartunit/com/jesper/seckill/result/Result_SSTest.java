/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.result.CodeMsg;
import com.jesper.seckill.result.Result;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Result_SSTest extends Result_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_setCode_0()  throws Throwable  {
      //caseID:a9b5756b22e75c0fc4b11edc5cd9905d
      Result<String> result0 = Result.success("1");

      //invoke method for result0
      result0.setCode(1038);

      //invoke method for result0
      assertEquals(1038, result0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setData_1()  throws Throwable  {
      //caseID:9022dd3359ea98a906f3f16c2a13cb5d
      Result<String> result0 = Result.success("");

      //invoke method for result0
      result0.setData("");

      //invoke method for result0
      assertNull(result0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:42f1d6bc64eec60bb539ce3b5fa885c5
      Result<String> result0 = Result.error((CodeMsg) null);
      Result<Object> result1 = Result.success((Object) "1.0");

      //invoke method for result0
      result0.getMsg();

      //invoke method for result1
      result1.setMsg("");

      //invoke method for result1
      assertEquals(0, result1.getCode());
  }
  @Test(timeout = 4000)
  public void test_getMsg_3()  throws Throwable  {
      //caseID:01fa9033191c490ee83331f0ae17fc0e
      Result.success(",TxYy4rHCbQ14");

      //prepare data for codeMsg0
      CodeMsg codeMsg0 = mock(CodeMsg.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(codeMsg0).getCode();
      doReturn("ti,R6").when(codeMsg0).getMsg();
      Result<Object> result0 = Result.error(codeMsg0);

      //invoke method for result0
      result0.getData();
      String string0 = result0.getMsg();
      assertNotNull(string0);
      assertEquals("ti,R6", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_4()  throws Throwable  {
      //caseID:1aa3fd06362999ca40084f042ec2ae16

      //prepare data for codeMsg0
      CodeMsg codeMsg0 = mock(CodeMsg.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(codeMsg0).getCode();
      doReturn("1.0").when(codeMsg0).getMsg();
      Result<Object> result0 = Result.error(codeMsg0);

      //invoke method for result0
      result0.getData();
      Result.success((Object) null);
      int int0 = result0.getCode();
      assertEquals((-1), int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_5()  throws Throwable  {
      //caseID:cef2e9109e7c4891513b9f76215e7f79
      CodeMsg codeMsg0 = mock(CodeMsg.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(0).when(codeMsg0).getCode();
      doReturn("]").when(codeMsg0).getMsg();
      Result.error(codeMsg0);
      Result<Object> result0 = Result.success((Object) "1.0");

      //invoke method for result0
      result0.getData();

      //invoke method for result0
      result0.setMsg("GfZxoF");

      //invoke method for result0
      assertEquals("GfZxoF", result0.getMsg());
  }}
