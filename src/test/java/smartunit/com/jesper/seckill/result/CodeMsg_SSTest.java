/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:2143c4229c630f7c14d08514dbab9635
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500211, msg=\u767B\u5F55\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A]", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:9b77d803179a9e9258bc76ade2f999c7
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;
      int int0 = codeMsg0.getCode();
      assertEquals(500212, int0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:42564829c78659ea7955035bea4f96d5
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:d8c12e2689fdb31c7750f2ff5d632f1e
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1.0");

      //invoke method for codeMsg0
      assertEquals(500214, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_4()  throws Throwable  {
      //caseID:1abad7c1c385e32aaadcdaf110b2dbc9
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode(1658);

      //invoke method for codeMsg0
      assertEquals(1658, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_fillArgs_5()  throws Throwable  {
      //caseID:3948541fa3e4f2ce4be05f4c476f9469
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500501, codeMsg1.getCode());
  }}
