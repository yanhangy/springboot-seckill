/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getMsg_0()  throws Throwable  {
      //caseID:aeca0ce374dce88f8bfe295e552f1e9c
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_1()  throws Throwable  {
      //caseID:f4770e90fee94022bca7942ea3673b88
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1.0");

      //invoke method for codeMsg0
      assertEquals(500400, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:53fca1b3b0b6addeff7a425f6b5244c1
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;

      //invoke method for codeMsg0
      codeMsg0.setCode(0);

      //invoke method for codeMsg0
      assertEquals(0, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_toString_3()  throws Throwable  {
      //caseID:794db4a239157efd09574f08e084935c
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      Object[] objectArray0 = new Object[7];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(0, codeMsg1.getCode());
      
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=0, msg=success]", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_4()  throws Throwable  {
      //caseID:7323cb041e38f16f839da78a8b403377
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      Object[] objectArray0 = new Object[2];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      int int0 = codeMsg1.getCode();
      assertEquals(500104, int0);
  }}
