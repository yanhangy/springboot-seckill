/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getMsg_0()  throws Throwable  {
      //caseID:09f55b09a45957127ee7c86e83aaaa2e
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      String string0 = codeMsg0.getMsg();
      assertEquals("success", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:e5399331ecc143447e365b42ae2a0517
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      int int0 = codeMsg0.getCode();
      assertEquals(500214, int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:ac1513b622ade84961f186df6497fa67
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;

      //invoke method for codeMsg0
      codeMsg0.setMsg("100");

      //invoke method for codeMsg0
      assertEquals(500211, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:80069a8ff6bbdfa5ee3209450d182e46
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;

      //invoke method for codeMsg0
      codeMsg0.setCode((-25));

      //invoke method for codeMsg0
      assertEquals((-25), codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_toString_4()  throws Throwable  {
      //caseID:d7b652cc9fcd37bdc3f39191ccd5bc96
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) codeMsg0;
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals("\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1ACodeMsg [code=500101, msg=\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1A%s]", codeMsg1.getMsg());

      //invoke method for codeMsg1
      assertEquals(500101, codeMsg1.getCode());
  }}
