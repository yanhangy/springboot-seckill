/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:1685a57ee98ad52b2bc966d9b2f2d0b4
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      int int0 = codeMsg0.getCode();
      assertEquals(500501, int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_1()  throws Throwable  {
      //caseID:aa75df7070f0f1ef7f3bc8ccb4d79a08
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;

      //invoke method for codeMsg0
      codeMsg0.setMsg("");

      //invoke method for codeMsg0
      assertEquals(500212, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:e05bb304407034230ee2bf9c48ebac2e
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      Object[] objectArray0 = new Object[6];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500211, codeMsg1.getCode());
      
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500211, msg=\u767B\u5F55\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_3()  throws Throwable  {
      //caseID:925a4aed5bccb8f247ed8414043be2e1
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      Object[] objectArray0 = new Object[6];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      codeMsg1.getMsg();

      //invoke method for codeMsg1
      assertEquals(500400, codeMsg1.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_4()  throws Throwable  {
      //caseID:8d3d1d7963fe78ceb99defd6f03aebc2
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      Object[] objectArray0 = new Object[2];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      codeMsg1.setCode(1158);

      //invoke method for codeMsg1
      assertEquals(1158, codeMsg1.getCode());
  }}
