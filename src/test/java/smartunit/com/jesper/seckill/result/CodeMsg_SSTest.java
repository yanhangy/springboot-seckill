/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:19c6f7fa1e03619156381df2659de584
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500213, msg=\u624B\u673A\u53F7\u683C\u5F0F\u9519\u8BEF]", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:1b07311eb862d105c9a4bfd4427ce502
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500210, int0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:e09000df6e17f2938d8f61e2f18ab9e7
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1A%s", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:0a613ac4af032d26388d04bbacc1d9f7
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode(0);

      //invoke method for codeMsg0
      assertEquals(0, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:bcfc3a24c7cb3fcc8c61176ff766d491
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setMsg("");

      //invoke method for codeMsg0
      assertEquals(500210, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_fillArgs_5()  throws Throwable  {
      //caseID:05c0c6bb1f99e6128db07eee9144dda8
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500211, codeMsg1.getCode());
  }}
