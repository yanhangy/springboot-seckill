/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:a46c1f067a1d272f07b4c02e3b031ad9
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      int int0 = codeMsg0.getCode();
      assertEquals(500211, int0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:6d30ad8baddcbd33f45ec555e515bb76
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:7e4b1da0dc949fcbee8490fd28b69d59
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1");

      //invoke method for codeMsg0
      assertEquals(500210, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:fd2afd9130377334981097ad013cf433
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;

      //invoke method for codeMsg0
      codeMsg0.setCode(0);

      //invoke method for codeMsg0
      assertEquals(0, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_toString_4()  throws Throwable  {
      //caseID:3f8e798a74981831eb36c801dc29beb2
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      Object[] objectArray0 = new Object[9];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500104, codeMsg1.getCode());
      
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500104, msg=\u8BBF\u95EE\u9AD8\u5CF0\u671F\uFF0C\u8BF7\u7A0D\u7B49\uFF01]", string0);
  }}
