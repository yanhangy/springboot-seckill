/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {
// allCoveredLines:[34, 35, 36, 37, 40, 44, 45, 48, 52, 53, 61, 62, 63, 68]

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:d81c9ecc7e31253d9ba20da60ed5cd6b
      //CoveredLines: [40]
      //Assert: assertEquals(500211, method_result);
      
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      
      //Call method: getCode
      int int0 = codeMsg0.getCode();
      
      //Test Result Assert
      assertEquals(500211, int0);
  }

  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:84aa1df6dfba9d891bd87b4dbfad438e
      //CoveredLines: [48]
      //Assert: assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      
      //Call method: getMsg
      String string0 = codeMsg0.getMsg();
      
      //Test Result Assert
      assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", string0);
  }

  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:67a2738f0c3fb2511488b333a696649b
      //CoveredLines: [44, 45]
      //Input_0_int: 2518
      
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      
      //Call method: setCode
      codeMsg0.setCode(2518);
      
      //Test Result Assert
      assertEquals(2518, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:848b73d360f2c8a9dfb581c790ca1343
      //CoveredLines: [34, 35, 36, 37, 52, 53, 61, 62, 63]
      //Input_0_String: ""
      
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      Object[] objectArray0 = new Object[7];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      
      //Test Result Assert
      assertEquals(500214, codeMsg1.getCode());
      
      
      //Call method: setMsg
      codeMsg0.setMsg("");
      
      //Test Result Assert
      assertNotSame(codeMsg0, codeMsg1);
  }

  @Test(timeout = 4000)
  public void test_toString_4()  throws Throwable  {
      //caseID:046c9f77636f78f43f53bd928d713923
      //CoveredLines: [68]
      //Assert: assertEquals("CodeMsg [code=500216, msg=\u4E3B\u952E\u51B2\u7A81]", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.PRIMARY_ERROR;
      
      //Call method: toString
      String string0 = codeMsg0.toString();
      
      //Test Result Assert
      assertEquals("CodeMsg [code=500216, msg=\u4E3B\u952E\u51B2\u7A81]", string0);
  }
}
