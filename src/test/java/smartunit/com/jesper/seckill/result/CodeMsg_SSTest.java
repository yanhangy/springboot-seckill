/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:d34f86c05e6d66c04f4ddec8977baf90
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500213, msg=\u624B\u673A\u53F7\u683C\u5F0F\u9519\u8BEF]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:b37b274038846023a18b1b682afb5bb9
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_2()  throws Throwable  {
      //caseID:212ce85df0cea07aa6ced1786c9a6436
      CodeMsg codeMsg0 = CodeMsg.PRIMARY_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500216, int0);
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:c368cd494d28ba05caec83eda0ce1037
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;

      //invoke method for codeMsg0
      codeMsg0.setCode(1259);

      //invoke method for codeMsg0
      assertEquals(1259, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:adbf090f066e281d6d96ebd89868f8cc
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      Object[] objectArray0 = new Object[7];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500104, codeMsg1.getCode());
      

      //invoke method for codeMsg0
      codeMsg0.setMsg("");

      //invoke method for codeMsg0

      //invoke method for codeMsg1
      assertNotSame(codeMsg0, codeMsg1);
  }}
