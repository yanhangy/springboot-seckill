/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:1c75d73ea7b777741ea9788fdf324bda
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500101, msg=\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1A%s]", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:c91524679c210572aa4e6bd7198e16cc
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;
      int int0 = codeMsg0.getCode();
      assertEquals(500500, int0);
  }
  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:fb56333d93599825784c95d1d5820148
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;

      //invoke method for codeMsg0
      codeMsg0.setCode(500501);

      //invoke method for codeMsg0
      assertEquals(500501, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:ca9e67d45c49e005d244801db0f229e5
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.setMsg(",Ns<cS+:s:T/1Irvy.");

      //invoke method for codeMsg0
      assertEquals(",Ns<cS+:s:T/1Irvy.", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_getMsg_4()  throws Throwable  {
      //caseID:2952167ff6c69bf779f79e408594502e
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500500, codeMsg1.getCode());
      
      String string0 = codeMsg0.getMsg();
      assertEquals("\u5546\u54C1\u5DF2\u7ECF\u79D2\u6740\u5B8C\u6BD5", string0);
  }}
