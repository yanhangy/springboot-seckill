/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.runtime.SmartAssertions.*;
import com.jesper.seckill.result.CodeMsg;
import java.util.MissingFormatArgumentException;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:7bd7fcc5dec2c3af14257c27187ffd6f
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      int int0 = codeMsg0.getCode();
      assertEquals(500104, int0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:b1f4bece71e1abbfbb2ae09bec98f7b0
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u683C\u5F0F\u9519\u8BEF", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:9da04db562be86cab677a77f4d007c58
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.setCode(2453);

      //invoke method for codeMsg0
      assertEquals(2453, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:d034a792aa25d3318f55cb02cea3d456
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;

      //invoke method for codeMsg0
      codeMsg0.setMsg("3's%4&.]i[&Uh4 .rY;");

      //invoke method for codeMsg0
      assertEquals("3's%4&.]i[&Uh4 .rY;", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_getMsg_4()  throws Throwable  {
      //caseID:58b2f1d962081d86bbbb85078f5e2514
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      CodeMsg.SERVER_ERROR = codeMsg0;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 

        //invoke method for codeMsg0
        codeMsg0.fillArgs(objectArray0);
      } catch(Throwable e) {
         verifyException("java.util.Formatter", e);
         assertEquals("java.util.MissingFormatArgumentException", e.getClass().getName());
         assertEquals("Format specifier '%s'", e.getMessage());
      }
  }}
