/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:c37fc547bb1909759c03ccb51d4aff68
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500501, msg=\u4E0D\u80FD\u91CD\u590D\u79D2\u6740]", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:f2a582444e425b38ce25178981faa718
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      int int0 = codeMsg0.getCode();
      assertEquals(500211, int0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:f7a5e90635c66cdc63338758eb41986e
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u4E0D\u80FD\u4E3A\u7A7A", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:02a22e04116d7570c7b62fbfcd344bff
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode((-580));

      //invoke method for codeMsg0
      assertEquals((-580), codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:6a766c069725db0f028a878e8b9eede8
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1");

      //invoke method for codeMsg0
      assertEquals("1", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_fillArgs_5()  throws Throwable  {
      //caseID:5e07ceadeb2082bd42018d8cfcc73018
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500500, codeMsg1.getCode());
  }}
