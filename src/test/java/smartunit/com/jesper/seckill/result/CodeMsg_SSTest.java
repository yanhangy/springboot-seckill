/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getMsg_0()  throws Throwable  {
      //caseID:eaf170c1359a3cbd5e29647a2863127f
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:973b66efcefec841e61b2c639e8797c8
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;
      int int0 = codeMsg0.getCode();
      assertEquals(500500, int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:7561f3b78958bc8557560f0355de0709
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.PASSWORD_EMPTY.setMsg("itjGh$s_>lFnc J4O/");

      //invoke method for codeMsg0
      assertEquals("\u624B\u673A\u53F7\u4E0D\u5B58\u5728", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_toString_3()  throws Throwable  {
      //caseID:b379ea0cc4b3cb552062e003b94ed1de
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      Object[] objectArray0 = new Object[9];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500101, codeMsg1.getCode());
      
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500101, msg=\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1A%s]", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_4()  throws Throwable  {
      //caseID:2ae781755d1375098a12c891beb0904d
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      Object[] objectArray0 = new Object[1];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      codeMsg1.setCode(1097);

      //invoke method for codeMsg1
      assertEquals(1097, codeMsg1.getCode());
  }}
