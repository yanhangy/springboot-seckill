/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:59f9ef1cd4cc03c287bd6e5f138ef81d
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500501, msg=\u4E0D\u80FD\u91CD\u590D\u79D2\u6740]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:a52867244b50c50c46b660cd6f321e90
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u5BC6\u7801\u9519\u8BEF", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:22b3ea5471610bb35bcff01e31417e4e
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1.0");

      //invoke method for codeMsg0
      assertEquals(500104, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:97ae81f78e596a1dc590fa0d0c9155a0
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode(1);

      //invoke method for codeMsg0
      assertEquals(1, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_getCode_4()  throws Throwable  {
      //caseID:e1fa0000bc2ff6440829abcb9d7703aa
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500104, codeMsg1.getCode());
      
      int int0 = codeMsg0.getCode();
      assertEquals(500104, int0);
  }}
