/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getMsg_0()  throws Throwable  {
      //caseID:d0b30437cbf81cee880183789dd0e9d0
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u670D\u52A1\u7AEF\u5F02\u5E38", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:bf52653208505bdf7792066811c1f39e
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500101, int0);
  }
  @Test(timeout = 4000)
  public void test_toString_2()  throws Throwable  {
      //caseID:1fa7cfb53799225e042d95d904ac3ea5
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500100, msg=\u670D\u52A1\u7AEF\u5F02\u5E38]", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:911b7c4b32a88fe11c155e4cb00e7755
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;

      //invoke method for codeMsg0
      codeMsg0.setCode(15);

      //invoke method for codeMsg0
      assertEquals(15, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:44a8574c28e6dd9f2174e408a2b70337
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      Object[] objectArray0 = new Object[2];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(0, codeMsg1.getCode());
      

      //invoke method for codeMsg0
      codeMsg0.setMsg("500211");

      //invoke method for codeMsg0
      assertEquals(0, codeMsg0.getCode());
  }}
