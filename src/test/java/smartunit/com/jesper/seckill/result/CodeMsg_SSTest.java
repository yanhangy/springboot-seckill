/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:8c26ec3021ac5ec26dcacbfef3a32392
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500501, msg=\u4E0D\u80FD\u91CD\u590D\u79D2\u6740]", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_1()  throws Throwable  {
      //caseID:07cfc710acc5c2d5bec9c55673aa435b
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;

      //invoke method for codeMsg0
      codeMsg0.setMsg("\u673A\u53F7\u4E0D\u80FD\u4E3A\u7A7A");

      //invoke method for codeMsg0
      assertEquals("\u673A\u53F7\u4E0D\u80FD\u4E3A\u7A7A", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:67d0a9adc59661ddc199713316a314d4
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode(500210);

      //invoke method for codeMsg0
      assertEquals(500210, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_getMsg_3()  throws Throwable  {
      //caseID:796320d28707e55a0ff9c123fbae30cd
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      Object[] objectArray0 = new Object[9];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(0, codeMsg1.getCode());
      
      String string0 = codeMsg0.getMsg();
      assertEquals("success", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_4()  throws Throwable  {
      //caseID:d0bffefd73d6022fafee103111c0075c
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500213, codeMsg1.getCode());
      
      int int0 = codeMsg0.getCode();
      assertEquals(500213, int0);
  }}
