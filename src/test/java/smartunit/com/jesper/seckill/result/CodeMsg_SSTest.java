/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {
// allCoveredLines:[34, 35, 36, 37, 40, 44, 45, 48, 52, 53, 61, 62, 63, 68]

  @Test(timeout = 4000)
  public void test_fillArgs_0()  throws Throwable  {
      //caseID:0c155beef58d34dbc0d46b7e12566175
      //CoveredLines: [34, 35, 36, 37, 61, 62, 63]
      //Input_0_Object[]: objectArray0
      //Assert: assertEquals(500400, method_result.getCode());
      
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      Object[] objectArray0 = new Object[0];
      
      //Call method: fillArgs
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      
      //Test Result Assert
      assertEquals(500400, codeMsg1.getCode());
  }

  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:d5ea3154cd0be6bb0bf3d9fabf1f9b26
      //CoveredLines: [40]
      //Assert: assertEquals(500101, method_result);
      
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      
      //Call method: getCode
      int int0 = codeMsg0.getCode();
      
      //Test Result Assert
      assertEquals(500101, int0);
  }

  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:6f952ee5a57aea31552e56fe070cc05b
      //CoveredLines: [48]
      //Assert: assertEquals("\u624B\u673A\u53F7\u4E0D\u5B58\u5728", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      
      //Call method: getMsg
      String string0 = codeMsg0.getMsg();
      
      //Test Result Assert
      assertEquals("\u624B\u673A\u53F7\u4E0D\u5B58\u5728", string0);
  }

  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:8b7c394cd70b340083bcc16e362378b5
      //CoveredLines: [44, 45]
      //Input_0_int: 955
      
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      
      //Call method: setCode
      codeMsg0.setCode(955);
      
      //Test Result Assert
      assertEquals(955, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:8e55efec0d1fc63e08d360e4ffc6e620
      //CoveredLines: [52, 53]
      //Input_0_String: "500213"
      
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      
      //Call method: setMsg
      codeMsg0.setMsg("500213");
      
      //Test Result Assert
      assertEquals(500101, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_toString_5()  throws Throwable  {
      //caseID:78f932dcce1ef50b4c75b8440fbad666
      //CoveredLines: [68]
      //Assert: assertEquals("CodeMsg [code=500100, msg=\u670D\u52A1\u7AEF\u5F02\u5E38]", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;
      
      //Call method: toString
      String string0 = codeMsg0.toString();
      
      //Test Result Assert
      assertEquals("CodeMsg [code=500100, msg=\u670D\u52A1\u7AEF\u5F02\u5E38]", string0);
  }
}
