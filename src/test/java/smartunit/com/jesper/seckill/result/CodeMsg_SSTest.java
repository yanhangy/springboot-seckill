/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {
// allCoveredLines:[34, 35, 36, 37, 40, 44, 45, 48, 52, 53, 61, 62, 63, 68]

  @Test(timeout = 4000)
  public void test_fillArgs_0()  throws Throwable  {
      //caseID:9ca30f2bbd3baf604d2056c7ecd3f6c3
      //CoveredLines: [34, 35, 36, 37, 61, 62, 63]
      //Input_0_Object[]: objectArray0
      //Assert: assertEquals(500214, method_result.getCode());
      
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      Object[] objectArray0 = new Object[0];
      
      //Call method: fillArgs
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      
      //Test Result Assert
      assertEquals(500214, codeMsg1.getCode());
  }

  @Test(timeout = 4000)
  public void test_getCode_1()  throws Throwable  {
      //caseID:0a5b56f3a0e4d56e3f5d0dbcbfd6f67d
      //CoveredLines: [40]
      //Assert: assertEquals(500400, method_result);
      
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      
      //Call method: getCode
      int int0 = codeMsg0.getCode();
      
      //Test Result Assert
      assertEquals(500400, int0);
  }

  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:27bd81eceacca364fe936c2f64b39065
      //CoveredLines: [48]
      //Assert: assertEquals("Session\u4E0D\u5B58\u5728\u6216\u8005\u5DF2\u7ECF\u5931\u6548", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;
      
      //Call method: getMsg
      String string0 = codeMsg0.getMsg();
      
      //Test Result Assert
      assertEquals("Session\u4E0D\u5B58\u5728\u6216\u8005\u5DF2\u7ECF\u5931\u6548", string0);
  }

  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:7a965c5d83033ae012fd1cb993f68244
      //CoveredLines: [44, 45]
      //Input_0_int: 0
      
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      
      //Call method: setCode
      codeMsg0.setCode(0);
      
      //Test Result Assert
      assertEquals(0, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:08d76bd484b6e6d16cb8122644682003
      //CoveredLines: [52, 53]
      //Input_0_String: "\u8BA2\u5355\u4E0D\u5B58\u5728"
      
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      
      //Call method: setMsg
      codeMsg0.setMsg("\u8BA2\u5355\u4E0D\u5B58\u5728");
      
      //Test Result Assert
      assertEquals(500211, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_toString_5()  throws Throwable  {
      //caseID:4eb64e9d4768c7d877b8fd268ebae2ef
      //CoveredLines: [68]
      //Assert: assertEquals("CodeMsg [code=500211, msg=\u767B\u5F55\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A]", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_EMPTY;
      
      //Call method: toString
      String string0 = codeMsg0.toString();
      
      //Test Result Assert
      assertEquals("CodeMsg [code=500211, msg=\u767B\u5F55\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A]", string0);
  }
}
