/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:78f4338a1e6d47890cc1c0419cc891b8
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500212, msg=\u624B\u673A\u53F7\u4E0D\u80FD\u4E3A\u7A7A]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:9f3401448e85ff16c2a90128002550fa
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u4E0D\u80FD\u4E3A\u7A7A", string0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_2()  throws Throwable  {
      //caseID:722784bf49f3918a694a57414643942c
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setMsg("CodeMsg [code=");

      //invoke method for codeMsg0
      assertEquals("CodeMsg [code=", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:472a02b9c8ce7c5b17ba7d1140c83ae6
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setCode((-4400));

      //invoke method for codeMsg0
      assertEquals((-4400), codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_getCode_4()  throws Throwable  {
      //caseID:33afe3959d31a54c51755a71f8ad2a83
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      Object[] objectArray0 = new Object[5];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      int int0 = codeMsg1.getCode();
      assertEquals(500501, int0);
  }}
