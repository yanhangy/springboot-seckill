/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:66643884bd745144f2fbb9e37e0efbf3
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500501, msg=\u4E0D\u80FD\u91CD\u590D\u79D2\u6740]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:ee2b36f312de3734ea1b29455bba3f61
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u53C2\u6570\u6821\u9A8C\u5F02\u5E38\uFF1A%s", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_2()  throws Throwable  {
      //caseID:4664c54b2a4729b56f94fb898670c8f3
      CodeMsg codeMsg0 = CodeMsg.PASSWORD_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500215, int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:ac4179189e00be88cf24147c6b15b4c3
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;

      //invoke method for codeMsg0
      codeMsg0.setMsg("wYzJg>Gm0V}_<");

      //invoke method for codeMsg0
      assertEquals("wYzJg>Gm0V}_<", codeMsg0.getMsg());
  }
  @Test(timeout = 4000)
  public void test_setCode_4()  throws Throwable  {
      //caseID:8fcc688d71c75c4aaa623d123699da2c
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;

      //invoke method for codeMsg0
      codeMsg0.setCode((-1));

      //invoke method for codeMsg0
      assertEquals((-1), codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_fillArgs_5()  throws Throwable  {
      //caseID:278876fdc5274efb85edb16559c49c78
      CodeMsg codeMsg0 = CodeMsg.MOBILE_EMPTY;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500212, codeMsg1.getCode());
  }}
