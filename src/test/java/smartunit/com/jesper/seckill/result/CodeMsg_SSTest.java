/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {
// allCoveredLines:[34, 35, 36, 37, 40, 44, 45, 48, 52, 53, 61, 62, 63, 68]

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:ddf3d1cab6adef563d1551c100994dce
      //CoveredLines: [40]
      //Assert: assertEquals(500101, method_result);
      
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      
      //Call method: getCode
      int int0 = codeMsg0.getCode();
      
      //Test Result Assert
      assertEquals(500101, int0);
  }

  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:c57c6f7032302ae934c7bf16e8b2152c
      //CoveredLines: [48]
      //Assert: assertEquals("success", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.SUCCESS;
      
      //Call method: getMsg
      String string0 = codeMsg0.getMsg();
      
      //Test Result Assert
      assertEquals("success", string0);
  }

  @Test(timeout = 4000)
  public void test_setCode_2()  throws Throwable  {
      //caseID:f2346e69d9a650bfac94e513041443f9
      //CoveredLines: [34, 35, 36, 37, 44, 45, 61, 62, 63]
      //Input_0_int: 0
      
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      Object[] objectArray0 = new Object[4];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);
      
      //Test Result Assert
      assertEquals(500101, codeMsg1.getCode());
      
      
      //Call method: setCode
      codeMsg0.setCode(0);
      
      //Test Result Assert
      assertEquals(0, codeMsg0.getCode());
  }

  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:6c08abf84ce14c8d341f5b7612f9de5a
      //CoveredLines: [52, 53]
      //Input_0_String: "a1"
      
      CodeMsg codeMsg0 = CodeMsg.PRIMARY_ERROR;
      
      //Call method: setMsg
      codeMsg0.setMsg("a1");
      
      //Test Result Assert
      assertEquals("a1", codeMsg0.getMsg());
  }

  @Test(timeout = 4000)
  public void test_toString_4()  throws Throwable  {
      //caseID:4a6211c2ee0862506fce7f0d95675e16
      //CoveredLines: [68]
      //Assert: assertEquals("CodeMsg [code=500214, msg=\u624B\u673A\u53F7\u4E0D\u5B58\u5728]", method_result);
      
      CodeMsg codeMsg0 = CodeMsg.MOBILE_NOT_EXIST;
      
      //Call method: toString
      String string0 = codeMsg0.toString();
      
      //Test Result Assert
      assertEquals("CodeMsg [code=500214, msg=\u624B\u673A\u53F7\u4E0D\u5B58\u5728]", string0);
  }
}
