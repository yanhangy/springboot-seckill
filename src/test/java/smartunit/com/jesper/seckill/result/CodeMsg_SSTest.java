/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getCode_0()  throws Throwable  {
      //caseID:04d9832f5236c8e5b91418289210a9c4
      CodeMsg codeMsg0 = CodeMsg.SESSION_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500210, int0);
  }
  @Test(timeout = 4000)
  public void test_toString_1()  throws Throwable  {
      //caseID:e6399130920e3e5c06cf06383c45fddd
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500501, msg=\u4E0D\u80FD\u91CD\u590D\u79D2\u6740]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_2()  throws Throwable  {
      //caseID:f0cc5335792d1f69ab53d07840d75648
      CodeMsg codeMsg0 = CodeMsg.MOBILE_ERROR;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u624B\u673A\u53F7\u683C\u5F0F\u9519\u8BEF", string0);
  }
  @Test(timeout = 4000)
  public void test_setCode_3()  throws Throwable  {
      //caseID:a6e8e02c77d20a384affad683d3e98d4
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;
      Object[] objectArray0 = new Object[8];

      //invoke method for codeMsg0
      codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg0
      codeMsg0.setCode(1721);

      //invoke method for codeMsg0
      assertEquals(1721, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setMsg_4()  throws Throwable  {
      //caseID:f0dc5b95fdc0aa709d6f4053a258f2ac
      CodeMsg codeMsg0 = CodeMsg.REPEATE_SECKILL;
      Object[] objectArray0 = new Object[2];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500501, codeMsg1.getCode());
      

      //invoke method for codeMsg0
      codeMsg0.setMsg(" ls~*MAzu=|}3`m,");

      //invoke method for codeMsg0

      //invoke method for codeMsg1
      assertFalse(codeMsg0.equals((Object)codeMsg1));
  }}
