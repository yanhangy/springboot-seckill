/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.result;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.result.CodeMsg;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CodeMsg_SSTest extends CodeMsg_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_toString_0()  throws Throwable  {
      //caseID:b07a1cd66376f4c7858ebcfcecae6a25
      CodeMsg codeMsg0 = CodeMsg.PRIMARY_ERROR;
      String string0 = codeMsg0.toString();
      assertEquals("CodeMsg [code=500216, msg=\u4E3B\u952E\u51B2\u7A81]", string0);
  }
  @Test(timeout = 4000)
  public void test_getMsg_1()  throws Throwable  {
      //caseID:7db997805900da335e681821a4749844
      CodeMsg codeMsg0 = CodeMsg.ORDER_NOT_EXIST;
      String string0 = codeMsg0.getMsg();
      assertEquals("\u8BA2\u5355\u4E0D\u5B58\u5728", string0);
  }
  @Test(timeout = 4000)
  public void test_getCode_2()  throws Throwable  {
      //caseID:48b00911d0edd33d31430997f830a51b
      CodeMsg codeMsg0 = CodeMsg.BIND_ERROR;
      int int0 = codeMsg0.getCode();
      assertEquals(500101, int0);
  }
  @Test(timeout = 4000)
  public void test_setMsg_3()  throws Throwable  {
      //caseID:25a0fe6cfebf9182c6e54136a333f54a
      CodeMsg codeMsg0 = CodeMsg.SERVER_ERROR;

      //invoke method for codeMsg0
      codeMsg0.setMsg("1");

      //invoke method for codeMsg0
      assertEquals(500100, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_setCode_4()  throws Throwable  {
      //caseID:7f471d1a224007cea75e675f8dcf7edd
      CodeMsg codeMsg0 = CodeMsg.ACCESS_LIMIT_REACHED;

      //invoke method for codeMsg0
      codeMsg0.setCode(500101);

      //invoke method for codeMsg0
      assertEquals(500101, codeMsg0.getCode());
  }
  @Test(timeout = 4000)
  public void test_fillArgs_5()  throws Throwable  {
      //caseID:a5b2182fb0eb5aefb59fe91d1bfe89ad
      CodeMsg codeMsg0 = CodeMsg.SECKILL_OVER;
      Object[] objectArray0 = new Object[0];
      CodeMsg codeMsg1 = codeMsg0.fillArgs(objectArray0);

      //invoke method for codeMsg1
      assertEquals(500500, codeMsg1.getCode());
  }}
