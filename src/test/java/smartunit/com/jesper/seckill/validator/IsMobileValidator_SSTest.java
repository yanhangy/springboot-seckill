/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.validator.IsMobile;
import com.jesper.seckill.validator.IsMobileValidator;
import javax.validation.ConstraintValidatorContext;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class IsMobileValidator_SSTest extends IsMobileValidator_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_initialize_0()  throws Throwable  {
      //caseID:8fe715fd77512e3352ccd6162ef477c7
      IsMobileValidator isMobileValidator0 = new IsMobileValidator();

      //prepare data for isMobile0
      IsMobile isMobile0 = mock(IsMobile.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(true).when(isMobile0).required();

      //invoke method for isMobileValidator0
      isMobileValidator0.initialize(isMobile0);
  }
  @Test(timeout = 4000)
  public void test_isValid_1()  throws Throwable  {
      //caseID:fe966c21395e440d8feb2bab8b8b093f
      IsMobileValidator isMobileValidator0 = new IsMobileValidator();
      ConstraintValidatorContext constraintValidatorContext0 = mock(ConstraintValidatorContext.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      boolean boolean0 = isMobileValidator0.isValid("", constraintValidatorContext0);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_isValid_2()  throws Throwable  {
      //caseID:284caec413b301743bfea56460a77e9b
      IsMobileValidator isMobileValidator0 = new IsMobileValidator();
      ConstraintValidatorContext constraintValidatorContext0 = mock(ConstraintValidatorContext.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      boolean boolean0 = isMobileValidator0.isValid("0", constraintValidatorContext0);
      assertFalse(boolean0);
  }}
