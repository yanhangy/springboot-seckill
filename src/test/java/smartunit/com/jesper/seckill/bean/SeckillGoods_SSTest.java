/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.SeckillGoods;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SeckillGoods_SSTest extends SeckillGoods_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getStockCount_00()  throws Throwable  {
      //caseID:ad41e669a372a699bc18a89506a6bca3
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Integer integer0 = seckillGoods0.getStockCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getGoodsId_01()  throws Throwable  {
      //caseID:9fe51d122dc007c37e7fee1603d54199
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Long long0 = seckillGoods0.getGoodsId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getVersion_02()  throws Throwable  {
      //caseID:5c9a69363955d0476e9f4d93d7d626e8
      SeckillGoods seckillGoods0 = new SeckillGoods();
      int int0 = seckillGoods0.getVersion();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getEndDate_03()  throws Throwable  {
      //caseID:3e26b427025ab443a99c2772eb51148f
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Date date0 = seckillGoods0.getEndDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getId_04()  throws Throwable  {
      //caseID:070cb053aabc85ad62d9d00c4eeccab3
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Long long0 = seckillGoods0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getStartDate_05()  throws Throwable  {
      //caseID:fb2c7dc0a7e8d482202878554620127e
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Date date0 = seckillGoods0.getStartDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_setStockCount_06()  throws Throwable  {
      //caseID:b9901f06372d0543c3112e93862376d8
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Integer integer0 = new Integer(224);

      //invoke method for seckillGoods0
      seckillGoods0.setStockCount(integer0);

      //invoke method for seckillGoods0
      assertEquals(0, seckillGoods0.getVersion());
  }
  @Test(timeout = 4000)
  public void test_setEndDate_07()  throws Throwable  {
      //caseID:05f226baf915d16fcdf885c4dfb7ffd5
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for seckillGoods0
      seckillGoods0.setEndDate(date0);

      //invoke method for seckillGoods0
      assertEquals(0, seckillGoods0.getVersion());
  }
  @Test(timeout = 4000)
  public void test_setStartDate_08()  throws Throwable  {
      //caseID:63862a60178b0a8f4f0f24bb280a45d3
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for seckillGoods0
      seckillGoods0.setStartDate(date0);

      //invoke method for seckillGoods0
      assertNull(seckillGoods0.getGoodsId());
  }
  @Test(timeout = 4000)
  public void test_setGoodsId_09()  throws Throwable  {
      //caseID:995206f7f195b70638930f3b8299a529
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Long long0 = new Long((-1));

      //invoke method for seckillGoods0
      seckillGoods0.setGoodsId(long0);

      //invoke method for seckillGoods0
      assertEquals(0, seckillGoods0.getVersion());
  }
  @Test(timeout = 4000)
  public void test_setVersion_10()  throws Throwable  {
      //caseID:65785282da2b8874e9816173d7b5caf0
      SeckillGoods seckillGoods0 = new SeckillGoods();

      //invoke method for seckillGoods0
      seckillGoods0.setVersion((-28));

      //invoke method for seckillGoods0
      assertEquals((-28), seckillGoods0.getVersion());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:34c99448a5e6d0f40a180b91325001bd
      SeckillGoods seckillGoods0 = new SeckillGoods();
      Long long0 = new Long(1431);

      //invoke method for seckillGoods0
      seckillGoods0.setId(long0);

      //invoke method for seckillGoods0
      assertEquals(1431L, (long)seckillGoods0.getId());
  }}
