/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.OrderInfo;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OrderInfo_SSTest extends OrderInfo_SSTest_scaffolding {
// allCoveredLines:[8, 21, 24, 25, 27, 30, 31, 33, 36, 37, 39, 42, 43, 45, 48, 49, 51, 54, 55, 57, 60, 61, 63, 66, 67, 69, 72, 73, 75, 78, 79, 81, 84, 85]

  @Test(timeout = 4000)
  public void test_getCreateDate_00()  throws Throwable  {
      //caseID:40c1584a8cc928ec43ea76731090a019
      //CoveredLines: [8, 75]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getCreateDate
      Date date0 = orderInfo0.getCreateDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getDeliveryAddrId_01()  throws Throwable  {
      //caseID:e671b8a4d85b75310ace74ab1198fef6
      //CoveredLines: [8, 39]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getDeliveryAddrId
      Long long0 = orderInfo0.getDeliveryAddrId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsCount_02()  throws Throwable  {
      //caseID:8e01cbf162c068731bd0683f203126f8
      //CoveredLines: [8, 51]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsCount
      Integer integer0 = orderInfo0.getGoodsCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsId_03()  throws Throwable  {
      //caseID:ebe179593785a5c859994efbf5679e30
      //CoveredLines: [8, 33]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsId
      Long long0 = orderInfo0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsName_04()  throws Throwable  {
      //caseID:146b0ed7efcbc53cb9fee6ec211d64eb
      //CoveredLines: [8, 45]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsName
      String string0 = orderInfo0.getGoodsName();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsPrice_05()  throws Throwable  {
      //caseID:7bb0a135ac592c023ef19d384a6fca51
      //CoveredLines: [8, 57]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsPrice
      Double double0 = orderInfo0.getGoodsPrice();
      
      //Test Result Assert
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test_getId_06()  throws Throwable  {
      //caseID:e685182db40ac0fcb62dd9593eeb32e1
      //CoveredLines: [8, 21]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getId
      Long long0 = orderInfo0.getId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getOrderChannel_07()  throws Throwable  {
      //caseID:4afb0eb34dbdcc635ccae95d6dd892ed
      //CoveredLines: [8, 63]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getOrderChannel
      Integer integer0 = orderInfo0.getOrderChannel();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getPayDate_08()  throws Throwable  {
      //caseID:3cdcb9413c9bee1cd29adeef0079cd81
      //CoveredLines: [8, 81]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getPayDate
      Date date0 = orderInfo0.getPayDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getStatus_09()  throws Throwable  {
      //caseID:478d93f20ee22eea17703d7ee400bb37
      //CoveredLines: [8, 69]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getStatus
      Integer integer0 = orderInfo0.getStatus();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getUserId_10()  throws Throwable  {
      //caseID:3790325b1db603118c0d1a8db38e5e90
      //CoveredLines: [8, 27]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getUserId
      Long long0 = orderInfo0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_setCreateDate_11()  throws Throwable  {
      //caseID:1da1baf83abd179112d575ea1fe64cd3
      //CoveredLines: [8, 78, 79]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCreateDate
      orderInfo0.setCreateDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getOrderChannel());
  }

  @Test(timeout = 4000)
  public void test_setDeliveryAddrId_12()  throws Throwable  {
      //caseID:9688323bcce4f37acd2e10569569ecd7
      //CoveredLines: [8, 42, 43]
      //Input_0_Long: 240
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(240);
      
      //Call method: setDeliveryAddrId
      orderInfo0.setDeliveryAddrId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsCount_13()  throws Throwable  {
      //caseID:ee778305e29be0477da68d334b4f7f95
      //CoveredLines: [8, 54, 55]
      //Input_0_Integer: 85
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(85);
      
      //Call method: setGoodsCount
      orderInfo0.setGoodsCount(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getDeliveryAddrId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsId_14()  throws Throwable  {
      //caseID:fe633b52598b697e98288625b7fd95e2
      //CoveredLines: [8, 36, 37]
      //Input_0_Long: 1
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(1);
      
      //Call method: setGoodsId
      orderInfo0.setGoodsId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsName_15()  throws Throwable  {
      //caseID:86056f64ecb00fb72ff81d285c21b8fa
      //CoveredLines: [8, 48, 49]
      //Input_0_String: -P{F8BG7k|ixt
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: setGoodsName
      orderInfo0.setGoodsName("-P{F8BG7k|ixt");
      
      //Test Result Assert
      assertEquals("-P{F8BG7k|ixt", orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setGoodsPrice_16()  throws Throwable  {
      //caseID:4fd592d4a500a95cdc955bbac3eaafb6
      //CoveredLines: [8, 60, 61]
      //Input_0_Double: 3367.6462346677404
      
      OrderInfo orderInfo0 = new OrderInfo();
      Double double0 = new Double(3367.6462346677404);
      
      //Call method: setGoodsPrice
      orderInfo0.setGoodsPrice(double0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setId_17()  throws Throwable  {
      //caseID:ea9d03257a2f496fcddfd3a2c7a92f46
      //CoveredLines: [8, 24, 25]
      //Input_0_Long: (-1)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long((-1));
      
      //Call method: setId
      orderInfo0.setId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getOrderChannel());
  }

  @Test(timeout = 4000)
  public void test_setOrderChannel_18()  throws Throwable  {
      //caseID:0e6b3f8c41245daf44a17ba63d356b57
      //CoveredLines: [8, 66, 67]
      //Input_0_Integer: (-1)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer((-1));
      
      //Call method: setOrderChannel
      orderInfo0.setOrderChannel(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsCount());
  }

  @Test(timeout = 4000)
  public void test_setPayDate_19()  throws Throwable  {
      //caseID:75fc60eb1dc27898a254ee4b0e0c5dbe
      //CoveredLines: [8, 84, 85]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setPayDate
      orderInfo0.setPayDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setStatus_20()  throws Throwable  {
      //caseID:02cd41c5b27a09a1a32f8e90264a61ed
      //CoveredLines: [8, 72, 73]
      //Input_0_Integer: (-1)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer((-1));
      
      //Call method: setStatus
      orderInfo0.setStatus(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setUserId_21()  throws Throwable  {
      //caseID:c8b79f05a226e0554b100beab506822c
      //CoveredLines: [8, 30, 31]
      //Input_0_Long: 0
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(0);
      
      //Call method: setUserId
      orderInfo0.setUserId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getOrderChannel());
  }
}
