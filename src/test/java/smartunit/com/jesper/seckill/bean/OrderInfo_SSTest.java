/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.OrderInfo;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OrderInfo_SSTest extends OrderInfo_SSTest_scaffolding {
// allCoveredLines:[8, 21, 24, 25, 27, 30, 31, 33, 36, 37, 39, 42, 43, 45, 48, 49, 51, 54, 55, 57, 60, 61, 63, 66, 67, 69, 72, 73, 75, 78, 79, 81, 84, 85]

  @Test(timeout = 4000)
  public void test_getCreateDate_00()  throws Throwable  {
      //caseID:fd63abf40156fd2a64c3fbe23ee3c1b6
      //CoveredLines: [8, 75]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getCreateDate
      Date date0 = orderInfo0.getCreateDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getDeliveryAddrId_01()  throws Throwable  {
      //caseID:aae5414dbd7077638f78b833a6818c16
      //CoveredLines: [8, 39]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getDeliveryAddrId
      Long long0 = orderInfo0.getDeliveryAddrId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsCount_02()  throws Throwable  {
      //caseID:dd862aed0cc45842aa59931b1fc3a232
      //CoveredLines: [8, 51]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsCount
      Integer integer0 = orderInfo0.getGoodsCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsId_03()  throws Throwable  {
      //caseID:624b766dd069395def5bc38681add00f
      //CoveredLines: [8, 33]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsId
      Long long0 = orderInfo0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsName_04()  throws Throwable  {
      //caseID:7fb3b22ebbb582eec6b0736c3f1883c5
      //CoveredLines: [8, 45]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsName
      String string0 = orderInfo0.getGoodsName();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsPrice_05()  throws Throwable  {
      //caseID:43dbc325aa84a732293385c0e3000a3e
      //CoveredLines: [8, 57]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsPrice
      Double double0 = orderInfo0.getGoodsPrice();
      
      //Test Result Assert
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test_getId_06()  throws Throwable  {
      //caseID:f6e8b5afd6f4c929d258de86cb328123
      //CoveredLines: [8, 21]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getId
      Long long0 = orderInfo0.getId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getOrderChannel_07()  throws Throwable  {
      //caseID:1fe3db155a3e9dbf71d94656efedbcfd
      //CoveredLines: [8, 63]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getOrderChannel
      Integer integer0 = orderInfo0.getOrderChannel();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getPayDate_08()  throws Throwable  {
      //caseID:484c295accd9442cf1e60aba21eaad3f
      //CoveredLines: [8, 81]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getPayDate
      Date date0 = orderInfo0.getPayDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getStatus_09()  throws Throwable  {
      //caseID:ee1f95662fd7d045aa09f708fd9cf9ed
      //CoveredLines: [8, 69]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getStatus
      Integer integer0 = orderInfo0.getStatus();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getUserId_10()  throws Throwable  {
      //caseID:7213998c4e99d8a39f91f5209de2320d
      //CoveredLines: [8, 27]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getUserId
      Long long0 = orderInfo0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_setCreateDate_11()  throws Throwable  {
      //caseID:7fd2ae6719939f4a8dd71f723083e5cd
      //CoveredLines: [8, 78, 79]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCreateDate
      orderInfo0.setCreateDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsCount());
  }

  @Test(timeout = 4000)
  public void test_setDeliveryAddrId_12()  throws Throwable  {
      //caseID:c5319d7fece8dae2d9016a992d9f225e
      //CoveredLines: [8, 42, 43]
      //Input_0_Long: (-6)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long((-6));
      
      //Call method: setDeliveryAddrId
      orderInfo0.setDeliveryAddrId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setGoodsCount_13()  throws Throwable  {
      //caseID:cc9e4e723f0d888a8cd37591fffb42fd
      //CoveredLines: [8, 54, 55]
      //Input_0_Integer: (-1)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer((-1));
      
      //Call method: setGoodsCount
      orderInfo0.setGoodsCount(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setGoodsId_14()  throws Throwable  {
      //caseID:041ebbd2f51b0ec79d18f63d7e262d16
      //CoveredLines: [8, 36, 37]
      //Input_0_Long: 0
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(0);
      
      //Call method: setGoodsId
      orderInfo0.setGoodsId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getDeliveryAddrId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsName_15()  throws Throwable  {
      //caseID:cdb111d2592fb7c5ddf71f7cac559fae
      //CoveredLines: [8, 48, 49]
      //Input_0_String: "4"
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: setGoodsName
      orderInfo0.setGoodsName("4");
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsPrice_16()  throws Throwable  {
      //caseID:162b0743e057e87eb8c79598f0ee448a
      //CoveredLines: [8, 60, 61]
      //Input_0_Double: (-1079.277794)
      
      OrderInfo orderInfo0 = new OrderInfo();
      Double double0 = new Double((-1079.277794));
      
      //Call method: setGoodsPrice
      orderInfo0.setGoodsPrice(double0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setId_17()  throws Throwable  {
      //caseID:55357ecb42ea8a0472cfd921cfa8f30b
      //CoveredLines: [8, 24, 25]
      //Input_0_Long: 2643
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(2643);
      
      //Call method: setId
      orderInfo0.setId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getStatus());
  }

  @Test(timeout = 4000)
  public void test_setOrderChannel_18()  throws Throwable  {
      //caseID:a0398e71fc3a17f0781c81cfa2018aad
      //CoveredLines: [8, 66, 67]
      //Input_0_Integer: 1
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(1);
      
      //Call method: setOrderChannel
      orderInfo0.setOrderChannel(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getUserId());
  }

  @Test(timeout = 4000)
  public void test_setPayDate_19()  throws Throwable  {
      //caseID:ebe7a4f94611c565c41a2d5d548f0d4d
      //CoveredLines: [8, 84, 85]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setPayDate
      orderInfo0.setPayDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsPrice());
  }

  @Test(timeout = 4000)
  public void test_setStatus_20()  throws Throwable  {
      //caseID:4da187baae46a582873c92643d45d561
      //CoveredLines: [8, 72, 73]
      //Input_0_Integer: 3
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(3);
      
      //Call method: setStatus
      orderInfo0.setStatus(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setUserId_21()  throws Throwable  {
      //caseID:bd5de67a2f8cfe41983e7c707a016704
      //CoveredLines: [8, 30, 31]
      //Input_0_Long: 1
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(1);
      
      //Call method: setUserId
      orderInfo0.setUserId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }
}
