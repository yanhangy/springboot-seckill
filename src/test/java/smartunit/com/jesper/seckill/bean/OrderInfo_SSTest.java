/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.OrderInfo;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class OrderInfo_SSTest extends OrderInfo_SSTest_scaffolding {
// allCoveredLines:[8, 21, 24, 25, 27, 30, 31, 33, 36, 37, 39, 42, 43, 45, 48, 49, 51, 54, 55, 57, 60, 61, 63, 66, 67, 69, 72, 73, 75, 78, 79, 81, 84, 85]

  @Test(timeout = 4000)
  public void test_getCreateDate_00()  throws Throwable  {
      //caseID:af7645d2ab86c6ffdb750c2f1c059cb2
      //CoveredLines: [8, 75]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getCreateDate
      Date date0 = orderInfo0.getCreateDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getDeliveryAddrId_01()  throws Throwable  {
      //caseID:a6dee7c124c9f652d5f65142b1299699
      //CoveredLines: [8, 39]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getDeliveryAddrId
      Long long0 = orderInfo0.getDeliveryAddrId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsCount_02()  throws Throwable  {
      //caseID:7ef6f77723ac4c214ff7a5272e9ce38e
      //CoveredLines: [8, 51]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsCount
      Integer integer0 = orderInfo0.getGoodsCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsId_03()  throws Throwable  {
      //caseID:b605232efd5ce94b4c29e6415bf5f9de
      //CoveredLines: [8, 33]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsId
      Long long0 = orderInfo0.getGoodsId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsName_04()  throws Throwable  {
      //caseID:033475e87653f7f8ac022cd56a911a0a
      //CoveredLines: [8, 45]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsName
      String string0 = orderInfo0.getGoodsName();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getGoodsPrice_05()  throws Throwable  {
      //caseID:3b44eea5e699a2fb98afa0298e103015
      //CoveredLines: [8, 57]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getGoodsPrice
      Double double0 = orderInfo0.getGoodsPrice();
      
      //Test Result Assert
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test_getId_06()  throws Throwable  {
      //caseID:322a0cb6120ec796815c39d0e216e3b3
      //CoveredLines: [8, 21]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getId
      Long long0 = orderInfo0.getId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getOrderChannel_07()  throws Throwable  {
      //caseID:7297f381f3caa47617f31f6bbd6e8248
      //CoveredLines: [8, 63]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getOrderChannel
      Integer integer0 = orderInfo0.getOrderChannel();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getPayDate_08()  throws Throwable  {
      //caseID:31cc6d4032b94715518cf8ceeb2009e9
      //CoveredLines: [8, 81]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getPayDate
      Date date0 = orderInfo0.getPayDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getStatus_09()  throws Throwable  {
      //caseID:aa2d447dc8082423a301206fd2710401
      //CoveredLines: [8, 69]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getStatus
      Integer integer0 = orderInfo0.getStatus();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getUserId_10()  throws Throwable  {
      //caseID:c685781fc43fec903ea9a03f920a3c5d
      //CoveredLines: [8, 27]
      //Assert: assertNull(method_result);
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: getUserId
      Long long0 = orderInfo0.getUserId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_setCreateDate_11()  throws Throwable  {
      //caseID:00b579fa6d9114d178bd61548321d11d
      //CoveredLines: [8, 78, 79]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setCreateDate
      orderInfo0.setCreateDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setDeliveryAddrId_12()  throws Throwable  {
      //caseID:89715db8b245ca3e3093314b57f0154d
      //CoveredLines: [8, 42, 43]
      //Input_0_Long: 2421
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(2421);
      
      //Call method: setDeliveryAddrId
      orderInfo0.setDeliveryAddrId(long0);
      
      //Test Result Assert
      assertEquals(2421L, (long)orderInfo0.getDeliveryAddrId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsCount_13()  throws Throwable  {
      //caseID:3391d01d40bd0f90aaadc374538812d1
      //CoveredLines: [8, 54, 55]
      //Input_0_Integer: 12
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(12);
      
      //Call method: setGoodsCount
      orderInfo0.setGoodsCount(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getUserId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsId_14()  throws Throwable  {
      //caseID:d168800b7c5da8ba8386f8dc12be3ddf
      //CoveredLines: [8, 36, 37]
      //Input_0_Long: 1
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(1);
      
      //Call method: setGoodsId
      orderInfo0.setGoodsId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsCount());
  }

  @Test(timeout = 4000)
  public void test_setGoodsName_15()  throws Throwable  {
      //caseID:b2c4b08fabf5038d1e00650bba677c81
      //CoveredLines: [8, 48, 49]
      //Input_0_String: &
      
      OrderInfo orderInfo0 = new OrderInfo();
      
      //Call method: setGoodsName
      orderInfo0.setGoodsName("&");
      
      //Test Result Assert
      assertNull(orderInfo0.getUserId());
  }

  @Test(timeout = 4000)
  public void test_setGoodsPrice_16()  throws Throwable  {
      //caseID:c5fbb5a6d9ef369fd43f32edc2cecc9c
      //CoveredLines: [8, 60, 61]
      //Input_0_Double: 2192.25
      
      OrderInfo orderInfo0 = new OrderInfo();
      Double double0 = new Double(2192.25);
      
      //Call method: setGoodsPrice
      orderInfo0.setGoodsPrice(double0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsName());
  }

  @Test(timeout = 4000)
  public void test_setId_17()  throws Throwable  {
      //caseID:822a497bd416b40341fb68e98082920d
      //CoveredLines: [8, 24, 25]
      //Input_0_Long: 0
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(0);
      
      //Call method: setId
      orderInfo0.setId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsCount());
  }

  @Test(timeout = 4000)
  public void test_setOrderChannel_18()  throws Throwable  {
      //caseID:09c9caba22ef65f4ddb23bb00139bb88
      //CoveredLines: [8, 66, 67]
      //Input_0_Integer: 127
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(127);
      
      //Call method: setOrderChannel
      orderInfo0.setOrderChannel(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getDeliveryAddrId());
  }

  @Test(timeout = 4000)
  public void test_setPayDate_19()  throws Throwable  {
      //caseID:b9f47e536d439e406d0bfe576a9e86fd
      //CoveredLines: [8, 84, 85]
      //Input_0_Date: {}
      
      OrderInfo orderInfo0 = new OrderInfo();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setPayDate
      orderInfo0.setPayDate(date0);
      
      //Test Result Assert
      assertNull(orderInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test_setStatus_20()  throws Throwable  {
      //caseID:9d22140cc620862cca1a9c166263ad44
      //CoveredLines: [8, 72, 73]
      //Input_0_Integer: 0
      
      OrderInfo orderInfo0 = new OrderInfo();
      Integer integer0 = new Integer(0);
      
      //Call method: setStatus
      orderInfo0.setStatus(integer0);
      
      //Test Result Assert
      assertNull(orderInfo0.getGoodsPrice());
  }

  @Test(timeout = 4000)
  public void test_setUserId_21()  throws Throwable  {
      //caseID:c35bdbc440d19ed1d3fb96d6fddd5245
      //CoveredLines: [8, 30, 31]
      //Input_0_Long: 1
      
      OrderInfo orderInfo0 = new OrderInfo();
      Long long0 = new Long(1);
      
      //Call method: setUserId
      orderInfo0.setUserId(long0);
      
      //Test Result Assert
      assertNull(orderInfo0.getStatus());
  }
}
