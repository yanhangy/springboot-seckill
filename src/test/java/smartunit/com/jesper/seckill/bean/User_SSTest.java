/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getRegisterDate_00()  throws Throwable  {
      //caseID:c76b55430c3439c71ee1c5663856330c
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:97d4f562bcbe5e77cdb4964bec319a65
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_02()  throws Throwable  {
      //caseID:b9174d9ce44a18e1b668f58fdc3af39e
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLastLoginDate_03()  throws Throwable  {
      //caseID:d49a72cd1aac0c735584b0cee48fdc3c
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_04()  throws Throwable  {
      //caseID:4b9572c9092e7517f5c5ed0d57d537a6
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_05()  throws Throwable  {
      //caseID:576b3f27069d97c543e0755f9a450fb8
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_06()  throws Throwable  {
      //caseID:019de23aaea09558247f92d33cb0db89
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_07()  throws Throwable  {
      //caseID:9cf4f047b6cffbb6877e8b9ec176e573
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:208c6083d542400d6caf5d7143b3e92f
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:c75c2b5013da69685a2cc9b467aff523
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_10()  throws Throwable  {
      //caseID:7a8b265c6b0105b6aa1c989f17b96825
      User user0 = new User();
      Integer integer0 = new Integer(7);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setPassword_11()  throws Throwable  {
      //caseID:cb4843d227275ce9f79f066d09358392
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("");

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setHead_12()  throws Throwable  {
      //caseID:e5154658aed17a94767597e5db595f74
      User user0 = new User();

      //invoke method for user0
      user0.setHead("1");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setId_13()  throws Throwable  {
      //caseID:f98005aedd06123cc8a3252f771ab202
      User user0 = new User();
      Long long0 = new Long(3);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(3L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setNickname_14()  throws Throwable  {
      //caseID:ccc431b73646f0ea87b39f5477d479ce
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("6");

      //invoke method for user0
      assertEquals("6", user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setSalt_15()  throws Throwable  {
      //caseID:0de8ba72c1c65803e2c0408346b96baa
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("55296");

      //invoke method for user0
      assertNull(user0.getNickname());
  }}
