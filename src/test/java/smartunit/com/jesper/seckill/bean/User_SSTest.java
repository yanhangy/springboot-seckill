/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getRegisterDate_00()  throws Throwable  {
      //caseID:6cdeae8713d63517ffb3e4faf86d17a6
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:eeb9f2dae3e028cfb75815d53f9c5b0c
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_02()  throws Throwable  {
      //caseID:149c1b451e2195fd9a587503b98dc299
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_03()  throws Throwable  {
      //caseID:10a4fa397bd531b8fd84b8cd6e363c4d
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_04()  throws Throwable  {
      //caseID:4304946e5e520ba59f3cc395d0ebb5d9
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLastLoginDate_05()  throws Throwable  {
      //caseID:8876e331a760f3963aa128c3f94504fb
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_06()  throws Throwable  {
      //caseID:1b93c13ed1838f6322663817fdc54b1d
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getId_07()  throws Throwable  {
      //caseID:abdd0fd6cae01cf8ceffdc08014e058e
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:950d9ee68f5a0dd8415df73605db59d5
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:8346de34b1d545903435e9bb5a58f66f
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setSalt_10()  throws Throwable  {
      //caseID:6a2f8fea86a5c01c06d03e51fde81ef7
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("%<{Q)e(q=b`(lU\"8x");

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:cb74a78dec6fc692e0756432af4da6d6
      User user0 = new User();
      Long long0 = new Long((-1));

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals((-1L), (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setNickname_12()  throws Throwable  {
      //caseID:36293503c9b969babdc15021d830e809
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("|2CPK");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setHead_13()  throws Throwable  {
      //caseID:d2dab73526cdf00a1d8b4ab01753204b
      User user0 = new User();

      //invoke method for user0
      user0.setHead("56320");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_14()  throws Throwable  {
      //caseID:733e4f49ce4333497a4c1128e73b2522
      User user0 = new User();
      Integer integer0 = new Integer(5551);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setPassword_15()  throws Throwable  {
      //caseID:877938f571f2adbf1606d819d6cffbc0
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("?");

      //invoke method for user0
      assertNull(user0.getId());
  }}
