/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {
// allCoveredLines:[8, 18, 21, 22, 24, 27, 28, 30, 33, 34, 36, 39, 40, 42, 45, 46, 48, 51, 52, 54, 57, 58, 60, 63, 64]

  @Test(timeout = 4000)
  public void test_getHead_00()  throws Throwable  {
      //caseID:e080c30a841d8f94feaa6b4d55321b24
      //CoveredLines: [8, 42]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getHead
      String string0 = user0.getHead();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getId_01()  throws Throwable  {
      //caseID:37ca41d8b0ea3f950ad6d0612d341c2e
      //CoveredLines: [8, 18]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getId
      Long long0 = user0.getId();
      
      //Test Result Assert
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test_getLastLoginDate_02()  throws Throwable  {
      //caseID:3a8a9df859e6f5b4aa6ba46ca90ed4bc
      //CoveredLines: [8, 54]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getLastLoginDate
      Date date0 = user0.getLastLoginDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getLoginCount_03()  throws Throwable  {
      //caseID:1c001d0731530deef0c13b1fc0a06273
      //CoveredLines: [8, 60]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getLoginCount
      Integer integer0 = user0.getLoginCount();
      
      //Test Result Assert
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test_getNickname_04()  throws Throwable  {
      //caseID:ffcb5da02c69eb283521273f0e992274
      //CoveredLines: [8, 24]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getNickname
      String string0 = user0.getNickname();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPassword_05()  throws Throwable  {
      //caseID:acf4572d3cb91d9f68b7784f2b0cccc7
      //CoveredLines: [8, 30]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getPassword
      String string0 = user0.getPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getRegisterDate_06()  throws Throwable  {
      //caseID:de89e6ecc85212175c03fd5bb80fd50e
      //CoveredLines: [8, 48]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getRegisterDate
      Date date0 = user0.getRegisterDate();
      
      //Test Result Assert
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test_getSalt_07()  throws Throwable  {
      //caseID:f5aa5d59b6a6b8cb13fc4ef24fdab3f6
      //CoveredLines: [8, 36]
      //Assert: assertNull(method_result);
      
      User user0 = new User();
      
      //Call method: getSalt
      String string0 = user0.getSalt();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_setHead_08()  throws Throwable  {
      //caseID:a2ae017abeb95f920381bc67f42fd2f5
      //CoveredLines: [8, 45, 46]
      //Input_0_String: ""
      
      User user0 = new User();
      
      //Call method: setHead
      user0.setHead("");
      
      //Test Result Assert
      assertNull(user0.getSalt());
  }

  @Test(timeout = 4000)
  public void test_setId_09()  throws Throwable  {
      //caseID:df69d9dd0e9154a4f5477934476c57e3
      //CoveredLines: [8, 21, 22]
      //Input_0_Long: (-1)
      
      User user0 = new User();
      Long long0 = new Long((-1));
      
      //Call method: setId
      user0.setId(long0);
      
      //Test Result Assert
      assertEquals((-1L), (long)user0.getId());
  }

  @Test(timeout = 4000)
  public void test_setLastLoginDate_10()  throws Throwable  {
      //caseID:1ec8f96a5a4330b8e1e93394f5788ea1
      //CoveredLines: [8, 57, 58]
      //Input_0_Date: {}
      
      User user0 = new User();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setLastLoginDate
      user0.setLastLoginDate(date0);
      
      //Test Result Assert
      assertNull(user0.getId());
  }

  @Test(timeout = 4000)
  public void test_setLoginCount_11()  throws Throwable  {
      //caseID:c9ab65dd64a80a94f9456117d9053d4f
      //CoveredLines: [8, 63, 64]
      //Input_0_Integer: (-1)
      
      User user0 = new User();
      Integer integer0 = new Integer((-1));
      
      //Call method: setLoginCount
      user0.setLoginCount(integer0);
      
      //Test Result Assert
      assertNull(user0.getId());
  }

  @Test(timeout = 4000)
  public void test_setNickname_12()  throws Throwable  {
      //caseID:3bb3c69e68ece52fc921e1059b23fdb0
      //CoveredLines: [8, 27, 28]
      //Input_0_String: "1"
      
      User user0 = new User();
      
      //Call method: setNickname
      user0.setNickname("1");
      
      //Test Result Assert
      assertNull(user0.getLoginCount());
  }

  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      //caseID:e9fccabf6dc299d8a26de5ed4a66480e
      //CoveredLines: [8, 33, 34]
      //Input_0_String: "]7%mP1!(UTgDNEaLr\"s"
      
      User user0 = new User();
      
      //Call method: setPassword
      user0.setPassword("]7%mP1!(UTgDNEaLr\"s");
      
      //Test Result Assert
      assertEquals("]7%mP1!(UTgDNEaLr\"s", user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test_setRegisterDate_14()  throws Throwable  {
      //caseID:1d3efb8aa21d6d2470600d79b26d031b
      //CoveredLines: [8, 51, 52]
      //Input_0_Date: {}
      
      User user0 = new User();
      //mock date0
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: setRegisterDate
      user0.setRegisterDate(date0);
      
      //Test Result Assert
      assertNull(user0.getSalt());
  }

  @Test(timeout = 4000)
  public void test_setSalt_15()  throws Throwable  {
      //caseID:ac7f9140979e2c1b3ab4cfc0500a22c4
      //CoveredLines: [8, 39, 40]
      //Input_0_String: "com.jesper.seckill.bean.User"
      
      User user0 = new User();
      
      //Call method: setSalt
      user0.setSalt("com.jesper.seckill.bean.User");
      
      //Test Result Assert
      assertNull(user0.getPassword());
  }
}
