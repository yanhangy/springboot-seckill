/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getPassword_00()  throws Throwable  {
      //caseID:1e19e289c1986b036431ad6ee07e9afb
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getId_01()  throws Throwable  {
      //caseID:fb3b4d9dd68e68b195627da823e2a5b4
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_02()  throws Throwable  {
      //caseID:aba3a7113ed4a402b66874a34384821f
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_03()  throws Throwable  {
      //caseID:79ef6a32f139d958e368c45f4444e200
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_04()  throws Throwable  {
      //caseID:90553a9e0348af48e98f6398e92f3df6
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_05()  throws Throwable  {
      //caseID:954c4e892c91023818ef16986197042b
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_06()  throws Throwable  {
      //caseID:267431e2e6cb9b93a76015d645e1970f
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_07()  throws Throwable  {
      //caseID:73a05f73f47a295cd52eb66185821ad8
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_08()  throws Throwable  {
      //caseID:d9a9ec5f17e8cc502483ee9402f10fb4
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_09()  throws Throwable  {
      //caseID:d6f2dd1b3f2cc6e97e80eae3dfb11350
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setNickname_10()  throws Throwable  {
      //caseID:4c2e0af0254dc1368ec92f64a09e0126
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:ab3df8ae2828ee56ac6478b61512eb86
      User user0 = new User();
      Long long0 = new Long(1);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(1L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setPassword_12()  throws Throwable  {
      //caseID:90692c68caa4733726159ae8bb8415cd
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1.0");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setSalt_13()  throws Throwable  {
      //caseID:c52b18595e9fd689ea59295e70f70dfc
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("b0");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setHead_14()  throws Throwable  {
      //caseID:23ec5294553144548f54059098fcd00e
      User user0 = new User();

      //invoke method for user0
      user0.setHead("");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_15()  throws Throwable  {
      //caseID:aaa8d6ecae5937a2445edad2e8d1f260
      User user0 = new User();
      Integer integer0 = new Integer(4);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }}
