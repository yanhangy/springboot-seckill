/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getNickname_00()  throws Throwable  {
      //caseID:478e4659181e1d455b31f3db0bbe73ea
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_01()  throws Throwable  {
      //caseID:0063e8ca618606884cc7b65c0858a122
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_02()  throws Throwable  {
      //caseID:3b9d8f43bf8a7ac63f30f22df8c5ad50
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_03()  throws Throwable  {
      //caseID:95c4e1de3574ff11dbeb579bf3ef0f69
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_04()  throws Throwable  {
      //caseID:e54963621b8f01ff05ca3b94c7adebf7
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_05()  throws Throwable  {
      //caseID:04d350cd5967be85aa4351c0929b7dfe
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_06()  throws Throwable  {
      //caseID:d6e3670eaa1d250da7718438b01ae91c
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_07()  throws Throwable  {
      //caseID:63dab2f3263df80ba27f6ccc937971cb
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:6d1c632bcca5a53403c818bd71ce5f78
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:b8741e1f730ff273928d3d6f8d6be419
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setId_10()  throws Throwable  {
      //caseID:5937bd9386e493b2f82d17da2c69c588
      User user0 = new User();
      Long long0 = new Long(2181);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setNickname_11()  throws Throwable  {
      //caseID:d7ebd9cbdcd3a097a05029a44a5b069a
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setHead_12()  throws Throwable  {
      //caseID:157a29d4c5bd888de057a9f897a8b73c
      User user0 = new User();

      //invoke method for user0
      user0.setHead("T|");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      //caseID:7c9ce1684bce41c924362b1737bb75ac
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setSalt_14()  throws Throwable  {
      //caseID:d3cc16cdf1c6dad3959fcea4bf447867
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("1");

      //invoke method for user0
      assertEquals("1", user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_15()  throws Throwable  {
      //caseID:66a8cd3182a023eedecb256cf58f7978
      User user0 = new User();
      Integer integer0 = new Integer(0);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }}
