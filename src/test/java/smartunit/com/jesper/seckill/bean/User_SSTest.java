/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getSalt_00()  throws Throwable  {
      //caseID:f54a9d9920112062e1a1128d8b855ac3
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:7a7355ea181f243ff0222d7a8547a120
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_02()  throws Throwable  {
      //caseID:e7d9ddba7bccfbd3673ff5923557ebac
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_03()  throws Throwable  {
      //caseID:43a5f95cef0b3a022b2ad419f65b6090
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_04()  throws Throwable  {
      //caseID:2bff85f4df282d15960420961118bf8a
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_05()  throws Throwable  {
      //caseID:cbdeef7335e17c6b3696734b90e37e06
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_06()  throws Throwable  {
      //caseID:153c5d7ef0d69221ee0cc177692e263b
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_07()  throws Throwable  {
      //caseID:ddcd18da0607f45dcae10762d2516026
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:366cd6e1af44083521720608946fa664
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:acb9d62eb597b5706de621bfe43365f8
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setSalt_10()  throws Throwable  {
      //caseID:646111f06c9c929c4cba6b332eb4ecd7
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertEquals("com.jesper.seckill.bean.User", user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:78846e37f94f8e82a8db04dbadbd82b0
      User user0 = new User();
      Long long0 = new Long(0);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setPassword_12()  throws Throwable  {
      //caseID:fe10287c7cb26dad9b5d646ea20bfc18
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_13()  throws Throwable  {
      //caseID:942570650ef3804fea39f55032d4545d
      User user0 = new User();
      Integer integer0 = new Integer(14);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertEquals(14, (int)user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setNickname_14()  throws Throwable  {
      //caseID:e10eca48ecdb2bf0f9ae63dc57faa6a9
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setHead_15()  throws Throwable  {
      //caseID:0d470f54ba64f2d088b005081484781d
      User user0 = new User();

      //invoke method for user0
      user0.setHead("65535");

      //invoke method for user0
      assertNull(user0.getSalt());
  }}
