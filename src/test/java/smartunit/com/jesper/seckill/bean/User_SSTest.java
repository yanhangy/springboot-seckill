/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getSalt_00()  throws Throwable  {
      //caseID:52a41c155dcf70a9f64b0d17db698082
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_01()  throws Throwable  {
      //caseID:c421a459536f0be01fa1c791276e63ab
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_02()  throws Throwable  {
      //caseID:fabfa3b3c133fff02f6c381f9bbb0f92
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_03()  throws Throwable  {
      //caseID:842a74063a6c9f30b07bc4de553d44ad
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_04()  throws Throwable  {
      //caseID:e62bc191ca3c4d1f90df7a283efa2e35
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getNickname_05()  throws Throwable  {
      //caseID:eddca367188a7d606d328414707f0363
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_06()  throws Throwable  {
      //caseID:7022f866bce101ddc7c75e0104e49a9a
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getId_07()  throws Throwable  {
      //caseID:22539fd438aa4bf6276c7c7e3eaca47b
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:4497755c61a8a3dd1ab80eeb98bd97f4
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:38263d54336386d69ca83a90956a969f
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setNickname_10()  throws Throwable  {
      //caseID:427e49074f5b27ee09ff63abee236fb9
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("18");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:5c9f70eb882242b06e08e612f6de068e
      User user0 = new User();
      Long long0 = new Long(1);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(1L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setPassword_12()  throws Throwable  {
      //caseID:ccfcbb8cc2ab934acfa35a132d9ac22b
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("com.jesper.s<ckill.`ean.User");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setSalt_13()  throws Throwable  {
      //caseID:69c34665acf5abdd568d6791daefebab
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("1.0");

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setHead_14()  throws Throwable  {
      //caseID:bfbc192047107082b9ec86c5ea5a198a
      User user0 = new User();

      //invoke method for user0
      user0.setHead("1");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_15()  throws Throwable  {
      //caseID:77b6a94ebf16f38d8dbccf8ff4e4e1dc
      User user0 = new User();
      Integer integer0 = new Integer(0);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getId());
  }}
