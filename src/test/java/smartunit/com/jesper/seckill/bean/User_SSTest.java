/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getRegisterDate_00()  throws Throwable  {
      //caseID:a57be6fc52006fac6098f7d7df81a1d6
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:298e05a0a26e4803eb4858299fa5c15b
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getHead_02()  throws Throwable  {
      //caseID:77e83234e7a3e901543a2d73fb103dc0
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLastLoginDate_03()  throws Throwable  {
      //caseID:7e1f55090d8d813e690e4824fd5b863c
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getHead_04()  throws Throwable  {
      //caseID:24235026ecb80b436165ca284221b7da
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getId_05()  throws Throwable  {
      //caseID:5424c3f369d145799a1fa3f55189c2d6
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_06()  throws Throwable  {
      //caseID:039f0761e6abce41f9eacbabb1e142df
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getHead_07()  throws Throwable  {
      //caseID:dc6468a4fc0a95420ccd2b9823df10d4
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_08()  throws Throwable  {
      //caseID:473b5042f78c5c924388001b9aba71a9
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_09()  throws Throwable  {
      //caseID:ee80044325f71d29f7d24cc67036188d
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setSalt_10()  throws Throwable  {
      //caseID:63dfc079ad9f067150f5fb4e3a45b4a9
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("1.0");

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setNickname_11()  throws Throwable  {
      //caseID:0d0fc83477feb4b5560128bdc4395697
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1");

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_12()  throws Throwable  {
      //caseID:b11886d958c20a42cbd9166bf1c3b574
      User user0 = new User();
      Integer integer0 = new Integer(1102);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      //caseID:e8c274d75a60a8a717ac45c9df01ae6d
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("57343");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setHead_14()  throws Throwable  {
      //caseID:14c4e6ea655846354a188fe6c2ff0e3c
      User user0 = new User();

      //invoke method for user0
      user0.setHead(";%$@S5");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setId_15()  throws Throwable  {
      //caseID:a39a8ba9c66bfecc37d65ce40cc5561f
      User user0 = new User();
      Long long0 = new Long(224);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(224L, (long)user0.getId());
  }}
