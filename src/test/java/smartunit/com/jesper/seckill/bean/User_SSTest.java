/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getPassword_00()  throws Throwable  {
      //caseID:83b059a34509a21f526ea521b3c93a62
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_01()  throws Throwable  {
      //caseID:bea407394239046d2a1e9b3cae3a5888
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_02()  throws Throwable  {
      //caseID:27baf76b1f2a3f0d1124655a1a14c006
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getId_03()  throws Throwable  {
      //caseID:218f8b5f66eaf52b8d280e95e009a7b5
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_04()  throws Throwable  {
      //caseID:761d226148701e7eff2044b660e8e914
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_05()  throws Throwable  {
      //caseID:aa75776e5832f8b8265837709ecd1e53
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_06()  throws Throwable  {
      //caseID:1f0bf5275689175214b74c04bec9ef8e
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_07()  throws Throwable  {
      //caseID:0396d9557f76d2d42116d9b63995af83
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:ad426ef6c1e3244fe009a438a9a71188
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:ca5732b69f05fc3f8249e14e8999a275
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setPassword_10()  throws Throwable  {
      //caseID:b3095543b53c0acb5924aa5e62f1d508
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:6fa8d23e14616f3162eb9b5f69d3535a
      User user0 = new User();
      Long long0 = new Long(1);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_12()  throws Throwable  {
      //caseID:d07fffbe044f339475fde12f3462aee8
      User user0 = new User();
      Integer integer0 = new Integer(224);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setNickname_13()  throws Throwable  {
      //caseID:db21dc7cbb4d5be91de79e3f7d58a3f5
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1.0");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setHead_14()  throws Throwable  {
      //caseID:c5ae7276b4e4f4af6dacdd0900db7479
      User user0 = new User();

      //invoke method for user0
      user0.setHead("1.0");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setSalt_15()  throws Throwable  {
      //caseID:4c620a1133309a6fb20293d938d3f0da
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("1");

      //invoke method for user0
      assertNull(user0.getPassword());
  }}
