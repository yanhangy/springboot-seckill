/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getHead_00()  throws Throwable  {
      //caseID:9af4f23568c7c80e0726866d0335663b
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_01()  throws Throwable  {
      //caseID:2557540ab0c193224bbb53ee1bf44b36
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_02()  throws Throwable  {
      //caseID:7ff5008c3324373936c0a7bbd887931a
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_03()  throws Throwable  {
      //caseID:e8dc3a75d40b71bb2b9527d7d7a29375
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getHead_04()  throws Throwable  {
      //caseID:3578c2aaa5f6538804e6200683a5f16b
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_05()  throws Throwable  {
      //caseID:c2587f4aadb079d6df0623eac956e79c
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getHead_06()  throws Throwable  {
      //caseID:01f252eb5c30ff56867a15b89703ff3d
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getId_07()  throws Throwable  {
      //caseID:754b0ee59732661707fa2bdb48c6de52
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:51caa620b5d5b77c16004ce4ff9df58f
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:4236dac162345f54486ce0b820ab15f2
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setId_10()  throws Throwable  {
      //caseID:be26098779e6593cc762b3885789a6bf
      User user0 = new User();
      Long long0 = new Long(1);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(1L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setHead_11()  throws Throwable  {
      //caseID:42355b67501c2ce0caf3cf3e01dffbd0
      User user0 = new User();

      //invoke method for user0
      user0.setHead("1.0");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setPassword_12()  throws Throwable  {
      //caseID:c82f0aaf051b2b603888c24e85f59cd2
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1.0");

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setNickname_13()  throws Throwable  {
      //caseID:ddd315df6290dab873a1be2b8bff3228
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("31");

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setSalt_14()  throws Throwable  {
      //caseID:e5a96e0f91014ef598fe875498a48ef6
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("10");

      //invoke method for user0
      assertEquals("10", user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_15()  throws Throwable  {
      //caseID:6c35081985e6099e6b7a39887d11c6aa
      User user0 = new User();
      Integer integer0 = new Integer(0);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }}
