/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getRegisterDate_00()  throws Throwable  {
      //caseID:d7273f96d0263c7c5ebe0748cdaa54e8
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:f649472eb6654983f0911b813132c8b4
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_02()  throws Throwable  {
      //caseID:3fdd9584d8386d445f921303da35c027
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_03()  throws Throwable  {
      //caseID:9fb614a86654351202d1a908b637ac64
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_04()  throws Throwable  {
      //caseID:74d637171e0cb4ca6d03e7942defab84
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_05()  throws Throwable  {
      //caseID:49c17ea4b3a1875859a659aa11cc5b1c
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getId_06()  throws Throwable  {
      //caseID:638f062a391bc6e1be146ad67f3b1ba1
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_07()  throws Throwable  {
      //caseID:fd481c1562f9e925da90d23eeb10b00b
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_08()  throws Throwable  {
      //caseID:f3ebb14e32991c25eb5da6bc6da0874b
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_09()  throws Throwable  {
      //caseID:a0ff84b33b5756ad2cd5b198008a37e5
      User user0 = new User();
      Integer integer0 = new Integer(35);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_10()  throws Throwable  {
      //caseID:d9fea98cd5a43d95dabfd51e50ffdfb8
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setId_11()  throws Throwable  {
      //caseID:4a289c7c3248d71137db3b26d5247993
      User user0 = new User();
      Long long0 = new Long(1384);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setHead_12()  throws Throwable  {
      //caseID:895fa277adbf1fd3aa96d8133aee11f7
      User user0 = new User();

      //invoke method for user0
      user0.setHead("55296");

      //invoke method for user0
      assertEquals("55296", user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setNickname_13()  throws Throwable  {
      //caseID:dcdd6440e99b5229926a7208b3de3033
      User user0 = new User();

      //invoke method for user0
      user0.setNickname(":UB~E^|&Zt~]1m");

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setSalt_14()  throws Throwable  {
      //caseID:5857ca1ad3c8103fb491da5962ccb585
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setPassword_15()  throws Throwable  {
      //caseID:7a02af8b6b695ab4faaa756555dff196
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1");

      //invoke method for user0
      assertNull(user0.getSalt());
  }}
