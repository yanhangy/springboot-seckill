/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getSalt_00()  throws Throwable  {
      //caseID:780a8620c431b7f4f2e1f30747dba721
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_01()  throws Throwable  {
      //caseID:bfe81e937020690d503b3e50c05e22e3
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_02()  throws Throwable  {
      //caseID:9a770dd29f32c9b21b445f4ad32f63d6
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_03()  throws Throwable  {
      //caseID:00fc37059b8aeda34a8973d9b15949ac
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_04()  throws Throwable  {
      //caseID:9569966068d3b1a63107bfb370546ce9
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_05()  throws Throwable  {
      //caseID:0648ea6dc4c49d18119195bc473b44d1
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_06()  throws Throwable  {
      //caseID:f59fd51b8589953019bbd5b1de304a50
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_07()  throws Throwable  {
      //caseID:7fdd5aca3e63d150cf904774837b4b41
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_08()  throws Throwable  {
      //caseID:25506308c79e49a85a35408cc3304332
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:4df4645f460052db7b5eb4ce750dee8d
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setId_10()  throws Throwable  {
      //caseID:e0d0fe5b5cd71941f8e56806fffc5989
      User user0 = new User();
      Long long0 = new Long(0);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(0L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_11()  throws Throwable  {
      //caseID:aa13baea03cc3ac0297f66bddcc395da
      User user0 = new User();
      Integer integer0 = new Integer((-1));

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setSalt_12()  throws Throwable  {
      //caseID:4a792026c46cbd12bdaff1e654ed5577
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      //caseID:e5b34cfbe3cd1bf5b6580ac85421ce7f
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1.0");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setHead_14()  throws Throwable  {
      //caseID:80250b0398030f1c848b69e8cdd891c3
      User user0 = new User();

      //invoke method for user0
      user0.setHead("com.google.common.io.PatternFilenameFilter");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setNickname_15()  throws Throwable  {
      //caseID:81951804c88f3122be6f7af9d7e8e569
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1.0");

      //invoke method for user0
      assertNull(user0.getHead());
  }}
