/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getSalt_00()  throws Throwable  {
      //caseID:a28625611d659467596135d805f91f74
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLastLoginDate_01()  throws Throwable  {
      //caseID:dda0807bc79c39322a105c879d28779e
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_02()  throws Throwable  {
      //caseID:dc3f5d7c2ef133362402891a932c1f3a
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_03()  throws Throwable  {
      //caseID:a313b2069e66f7db78258f19aed6d6a6
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_04()  throws Throwable  {
      //caseID:c69291d5d287e0d10bb7bcc10854d260
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_05()  throws Throwable  {
      //caseID:3b2042c8c69ac21e3798974af973d176
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_06()  throws Throwable  {
      //caseID:fa33c52240a02d362a7c8ecf0d66804a
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_07()  throws Throwable  {
      //caseID:a1e93b67b5731c51c2d5f4217cd04e91
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_08()  throws Throwable  {
      //caseID:cde2b01117c5c2800aa3d6a98d4c419f
      User user0 = new User();
      Integer integer0 = new Integer(55296);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_09()  throws Throwable  {
      //caseID:598a76f7a74d5307e900fd7e628fcf0a
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_10()  throws Throwable  {
      //caseID:241f810e3c4b68bd57d5890cbeb09fb1
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getSalt());
  }
  @Test(timeout = 4000)
  public void test_setNickname_11()  throws Throwable  {
      //caseID:67e5a4d811ce7de694b3a0182d87c7df
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("1.0");

      //invoke method for user0
      assertEquals("1.0", user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setPassword_12()  throws Throwable  {
      //caseID:a81a9473b22d68ec9493bde2ab017742
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1");

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setHead_13()  throws Throwable  {
      //caseID:750d1b0e4e8cc5ea42f93d1e73ad525e
      User user0 = new User();

      //invoke method for user0
      user0.setHead("1.0");

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setId_14()  throws Throwable  {
      //caseID:35231095ff53b8a5f966c63f180441ee
      User user0 = new User();
      Long long0 = new Long(56320);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertEquals(56320L, (long)user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setSalt_15()  throws Throwable  {
      //caseID:f121ace77ef2d8612c96c6803d50bba4
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("com.jesper.seckill.bean.User");

      //invoke method for user0
      assertNull(user0.getHead());
  }}
