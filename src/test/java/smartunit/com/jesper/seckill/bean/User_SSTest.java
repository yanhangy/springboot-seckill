/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import java.util.Date;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class User_SSTest extends User_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getSalt_00()  throws Throwable  {
      //caseID:fb04b285762bfe5d26156d55458a2723
      User user0 = new User();
      String string0 = user0.getNickname();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:2ae1403796ab5f738ff4587d12efb4f5
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getLoginCount_02()  throws Throwable  {
      //caseID:23e9d1ccb85813591bcbd8551e55125f
      User user0 = new User();
      Integer integer0 = user0.getLoginCount();
      assertNull(integer0);
  }
  @Test(timeout = 4000)
  public void test_getId_03()  throws Throwable  {
      //caseID:4a40332af863417d008745537940b0b6
      User user0 = new User();
      Long long0 = user0.getId();
      assertNull(long0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_04()  throws Throwable  {
      //caseID:fd469d15bc3ed092384833788da2832e
      User user0 = new User();
      Date date0 = user0.getLastLoginDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_05()  throws Throwable  {
      //caseID:675a67e19ec3ab5a6b44e033db7b7b55
      User user0 = new User();
      String string0 = user0.getSalt();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getSalt_06()  throws Throwable  {
      //caseID:a274078e4f90b8a97c3040d1b6daf468
      User user0 = new User();
      String string0 = user0.getHead();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getRegisterDate_07()  throws Throwable  {
      //caseID:fe9babc7bebbcab1b65df17fe86110a9
      User user0 = new User();
      Date date0 = user0.getRegisterDate();
      assertNull(date0);
  }
  @Test(timeout = 4000)
  public void test_setLastLoginDate_08()  throws Throwable  {
      //caseID:3081d680acfc855fc74d9590460f9c3d
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setLastLoginDate(date0);

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setRegisterDate_09()  throws Throwable  {
      //caseID:91c924be2019673fb20baf3842f5c939
      User user0 = new User();
      Date date0 = mock(Date.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //invoke method for user0
      user0.setRegisterDate(date0);

      //invoke method for user0
      assertNull(user0.getId());
  }
  @Test(timeout = 4000)
  public void test_setLoginCount_10()  throws Throwable  {
      //caseID:1153baaea434c52aabc5bc1aafeb841c
      User user0 = new User();
      Integer integer0 = new Integer(1002);

      //invoke method for user0
      user0.setLoginCount(integer0);

      //invoke method for user0
      assertNull(user0.getHead());
  }
  @Test(timeout = 4000)
  public void test_setHead_11()  throws Throwable  {
      //caseID:e7c502a13dc16d8e750b511d8ffbc256
      User user0 = new User();

      //invoke method for user0
      user0.setHead("");

      //invoke method for user0
      assertNull(user0.getPassword());
  }
  @Test(timeout = 4000)
  public void test_setId_12()  throws Throwable  {
      //caseID:92ab183ae31b6ba68778886fe0c13747
      User user0 = new User();
      Long long0 = new Long(18);

      //invoke method for user0
      user0.setId(long0);

      //invoke method for user0
      assertNull(user0.getNickname());
  }
  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      //caseID:6e0eee2589f26c77af6072ac8c9f8eca
      User user0 = new User();

      //invoke method for user0
      user0.setPassword("1");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setSalt_14()  throws Throwable  {
      //caseID:c3d7db05f64649c62cfd27638b50aa89
      User user0 = new User();

      //invoke method for user0
      user0.setSalt("");

      //invoke method for user0
      assertNull(user0.getLoginCount());
  }
  @Test(timeout = 4000)
  public void test_setNickname_15()  throws Throwable  {
      //caseID:bf26d854281f4adefac3a7e46bedb59d
      User user0 = new User();

      //invoke method for user0
      user0.setNickname("");

      //invoke method for user0
      assertNull(user0.getSalt());
  }}
