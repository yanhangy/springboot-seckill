/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.bean.User;
import com.jesper.seckill.controller.UserController;
import com.jesper.seckill.result.Result;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import org.springframework.ui.Model;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UserController_SSTest extends UserController_SSTest_scaffolding {
// allCoveredLines:[18, 29]

  @Test(timeout = 4000)
  public void test_info_0()  throws Throwable  {
      //caseID:43c15298cd4805958c0ed4cde031ee7c
      //CoveredLines: [18, 29]
      //Input_0_Model: {}
      //Input_1_User: {}
      //Assert: assertEquals(0, method_result.getCode());
      
      UserController userController0 = new UserController();
      //mock model0
      Model model0 = mock(Model.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock user0
      User user0 = mock(User.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: info
      Result<User> result0 = userController0.info(model0, user0);
      
      //Test Result Assert
      assertEquals(0, result0.getCode());
  }
}
