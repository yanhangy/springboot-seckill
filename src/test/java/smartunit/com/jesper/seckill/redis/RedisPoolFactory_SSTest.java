/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.jesper.seckill.redis.RedisConfig;
import com.jesper.seckill.redis.RedisPoolFactory;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;
import redis.clients.jedis.JedisPool;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisPoolFactory_SSTest extends RedisPoolFactory_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_JedisPoolFactory_0()  throws Throwable  {
      //caseID:0f4241d8caab996b341a7bf00d40d595
      RedisPoolFactory redisPoolFactory0 = new RedisPoolFactory();

      //prepare data for redisConfig0
      RedisConfig redisConfig0 = mock(RedisConfig.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn("1").when(redisConfig0).getHost();
      doReturn("7#0CxeaV~").when(redisConfig0).getPassword();
      doReturn((-1)).when(redisConfig0).getPoolMaxIdle();
      doReturn(50485).when(redisConfig0).getPoolMaxTotal();
      doReturn(0).when(redisConfig0).getPoolMaxWait();
      doReturn(0).when(redisConfig0).getPort();
      doReturn(0).when(redisConfig0).getTimeout();

      //invoke method for redisPoolFactory0
      PrivateAccess.setVariable((Class<?>) RedisPoolFactory.class, redisPoolFactory0, "redisConfig", (Object) redisConfig0);
      JedisPool jedisPool0 = redisPoolFactory0.JedisPoolFactory();
      assertFalse(jedisPool0.isClosed());
  }}
