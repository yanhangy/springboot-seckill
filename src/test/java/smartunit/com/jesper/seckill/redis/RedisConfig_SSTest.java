/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.redis.RedisConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisConfig_SSTest extends RedisConfig_SSTest_scaffolding {
// allCoveredLines:[12, 22, 26, 27, 30, 34, 35, 38, 42, 43, 46, 50, 51, 54, 58, 59, 62, 66, 67, 70, 74, 75]

  @Test(timeout = 4000)
  public void test_getHost_00()  throws Throwable  {
      //caseID:fc441a0af1580558c9b461ff5f20bcde
      //CoveredLines: [12, 22]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getHost
      String string0 = redisConfig0.getHost();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:f1cb6ad87b785ef71704bd9438e37c56
      //CoveredLines: [12, 46]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPassword
      String string0 = redisConfig0.getPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxIdle_02()  throws Throwable  {
      //caseID:cf486ea2e27a368b97bf2ecd8b4a9b1f
      //CoveredLines: [12, 62]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxIdle
      int int0 = redisConfig0.getPoolMaxIdle();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxTotal_03()  throws Throwable  {
      //caseID:0cb135d683630fcb4b2802f2fb2e629e
      //CoveredLines: [12, 54]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxTotal
      int int0 = redisConfig0.getPoolMaxTotal();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxWait_04()  throws Throwable  {
      //caseID:cb4372dcbe4996730133da5d2cdbba79
      //CoveredLines: [12, 70]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxWait
      int int0 = redisConfig0.getPoolMaxWait();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPort_05()  throws Throwable  {
      //caseID:8066b5786c341ef4b5fd83e728666349
      //CoveredLines: [12, 30]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPort
      int int0 = redisConfig0.getPort();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getTimeout_06()  throws Throwable  {
      //caseID:07fa2c4ce25fbe910326936043c1a9d3
      //CoveredLines: [12, 38]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getTimeout
      int int0 = redisConfig0.getTimeout();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_setHost_07()  throws Throwable  {
      //caseID:2d1f4ea4bb7e7f56fdce76b1eabb3dee
      //CoveredLines: [12, 26, 27]
      //Input_0_String: "1"
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setHost
      redisConfig0.setHost("1");
      
      //Test Result Assert
      assertEquals("1", redisConfig0.getHost());
  }

  @Test(timeout = 4000)
  public void test_setPassword_08()  throws Throwable  {
      //caseID:c0e05bab371af90fffac032e6bb699a8
      //CoveredLines: [12, 50, 51]
      //Input_0_String: "1"
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPassword
      redisConfig0.setPassword("1");
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getPoolMaxIdle());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxIdle_09()  throws Throwable  {
      //caseID:0867c5768891b87c3f47f6a817d5b6ba
      //CoveredLines: [12, 66, 67]
      //Input_0_int: 
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxIdle
      redisConfig0.setPoolMaxIdle((-15));
      
      //Test Result Assert
      assertEquals((-15), redisConfig0.getPoolMaxIdle());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxTotal_10()  throws Throwable  {
      //caseID:cd3535d9bd549a0c9172348a9b8b6104
      //CoveredLines: [12, 58, 59]
      //Input_0_int: 
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxTotal
      redisConfig0.setPoolMaxTotal((-1));
      
      //Test Result Assert
      assertEquals((-1), redisConfig0.getPoolMaxTotal());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxWait_11()  throws Throwable  {
      //caseID:df64d591e7c42488ee64e1a089fad449
      //CoveredLines: [12, 74, 75]
      //Input_0_int: 32
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxWait
      redisConfig0.setPoolMaxWait(32);
      
      //Test Result Assert
      assertEquals(32, redisConfig0.getPoolMaxWait());
  }

  @Test(timeout = 4000)
  public void test_setPort_12()  throws Throwable  {
      //caseID:c1ceffcbb88c44677edbc87d267dd295
      //CoveredLines: [12, 34, 35]
      //Input_0_int: 
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPort
      redisConfig0.setPort((-1));
      
      //Test Result Assert
      assertEquals((-1), redisConfig0.getPort());
  }

  @Test(timeout = 4000)
  public void test_setTimeout_13()  throws Throwable  {
      //caseID:e8ce57617b11f79a2f08ff6fc56b9ad7
      //CoveredLines: [12, 42, 43]
      //Input_0_int: 1
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setTimeout
      redisConfig0.setTimeout(1);
      
      //Test Result Assert
      assertEquals(1, redisConfig0.getTimeout());
  }
}
