/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.redis.RedisConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisConfig_SSTest extends RedisConfig_SSTest_scaffolding {
// allCoveredLines:[12, 22, 26, 27, 30, 34, 35, 38, 42, 43, 46, 50, 51, 54, 58, 59, 62, 66, 67, 70, 74, 75]

  @Test(timeout = 4000)
  public void test_getHost_00()  throws Throwable  {
      //caseID:18a12781cbc1b6850c30fa557a62a58e
      //CoveredLines: [12, 22]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getHost
      String string0 = redisConfig0.getHost();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:7aeeb90ecee772c96ed87ab11f74a8cb
      //CoveredLines: [12, 46]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPassword
      String string0 = redisConfig0.getPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxIdle_02()  throws Throwable  {
      //caseID:83341219a1076864e50606426b0c7e02
      //CoveredLines: [12, 62]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxIdle
      int int0 = redisConfig0.getPoolMaxIdle();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxTotal_03()  throws Throwable  {
      //caseID:da462fb2dac3d3890c12662688c8ba35
      //CoveredLines: [12, 54]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxTotal
      int int0 = redisConfig0.getPoolMaxTotal();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxWait_04()  throws Throwable  {
      //caseID:def5f4adccb9b2e98d7a84642094d396
      //CoveredLines: [12, 70]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxWait
      int int0 = redisConfig0.getPoolMaxWait();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPort_05()  throws Throwable  {
      //caseID:6908253d30d4af6367b4e5c01db5a5f3
      //CoveredLines: [12, 30]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPort
      int int0 = redisConfig0.getPort();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getTimeout_06()  throws Throwable  {
      //caseID:26d889532603bcf8984157122b349935
      //CoveredLines: [12, 38]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getTimeout
      int int0 = redisConfig0.getTimeout();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_setHost_07()  throws Throwable  {
      //caseID:2046308693b48a4fdf71a60ba68bf67b
      //CoveredLines: [12, 26, 27]
      //Input_0_String: ""
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setHost
      redisConfig0.setHost("");
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getTimeout());
  }

  @Test(timeout = 4000)
  public void test_setPassword_08()  throws Throwable  {
      //caseID:172955e561cb6bd2be4060077527581e
      //CoveredLines: [12, 50, 51]
      //Input_0_String: "com.jesper.seckill.redis.RedisConfig"
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPassword
      redisConfig0.setPassword("com.jesper.seckill.redis.RedisConfig");
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getTimeout());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxIdle_09()  throws Throwable  {
      //caseID:abd7a5080ac0f0a499d5bf2a8f95b216
      //CoveredLines: [12, 66, 67]
      //Input_0_int: 0
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxIdle
      redisConfig0.setPoolMaxIdle(0);
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getPoolMaxIdle());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxTotal_10()  throws Throwable  {
      //caseID:a763e85bba7163c3212f81716f0f0714
      //CoveredLines: [12, 58, 59]
      //Input_0_int: 1
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxTotal
      redisConfig0.setPoolMaxTotal(1);
      
      //Test Result Assert
      assertEquals(1, redisConfig0.getPoolMaxTotal());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxWait_11()  throws Throwable  {
      //caseID:9325b73aea0247b457b8a01553a41256
      //CoveredLines: [12, 74, 75]
      //Input_0_int: 
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxWait
      redisConfig0.setPoolMaxWait((-1));
      
      //Test Result Assert
      assertEquals((-1), redisConfig0.getPoolMaxWait());
  }

  @Test(timeout = 4000)
  public void test_setPort_12()  throws Throwable  {
      //caseID:8b3e63d2aca6529eb025c743ea352bd2
      //CoveredLines: [12, 34, 35]
      //Input_0_int: 
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPort
      redisConfig0.setPort((-33));
      
      //Test Result Assert
      assertEquals((-33), redisConfig0.getPort());
  }

  @Test(timeout = 4000)
  public void test_setTimeout_13()  throws Throwable  {
      //caseID:14ee7a54af58638a1c515163c1f0ce7f
      //CoveredLines: [12, 42, 43]
      //Input_0_int: 0
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setTimeout
      redisConfig0.setTimeout(0);
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getTimeout());
  }
}
