/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.redis.RedisConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisConfig_SSTest extends RedisConfig_SSTest_scaffolding {
// allCoveredLines:[12, 22, 26, 27, 30, 34, 35, 38, 42, 43, 46, 50, 51, 54, 58, 59, 62, 66, 67, 70, 74, 75]

  @Test(timeout = 4000)
  public void test_getHost_00()  throws Throwable  {
      //caseID:70ba6d151505dda94a8f1a704884fcf9
      //CoveredLines: [12, 22]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getHost
      String string0 = redisConfig0.getHost();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:f7823ceeacaeccbcee8aac25cb000438
      //CoveredLines: [12, 46]
      //Assert: assertNull(method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPassword
      String string0 = redisConfig0.getPassword();
      
      //Test Result Assert
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxIdle_02()  throws Throwable  {
      //caseID:7cbf67ac4698bc2d4ac06a2e423046bb
      //CoveredLines: [12, 62]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxIdle
      int int0 = redisConfig0.getPoolMaxIdle();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxTotal_03()  throws Throwable  {
      //caseID:b0081a0e297556350da7858fbac8f57a
      //CoveredLines: [12, 54]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxTotal
      int int0 = redisConfig0.getPoolMaxTotal();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPoolMaxWait_04()  throws Throwable  {
      //caseID:64887166669e6b8ef1d8d5dc0e48f68d
      //CoveredLines: [12, 70]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPoolMaxWait
      int int0 = redisConfig0.getPoolMaxWait();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getPort_05()  throws Throwable  {
      //caseID:017e2369b4a98aea4a066655cc1390a8
      //CoveredLines: [12, 30]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getPort
      int int0 = redisConfig0.getPort();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_getTimeout_06()  throws Throwable  {
      //caseID:5325507bf5ff948a0082652e22458aeb
      //CoveredLines: [12, 38]
      //Assert: assertEquals(0, method_result);
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: getTimeout
      int int0 = redisConfig0.getTimeout();
      
      //Test Result Assert
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test_setHost_07()  throws Throwable  {
      //caseID:6d10a9a33bc957b504a1bfbf2fa46510
      //CoveredLines: [12, 26, 27]
      //Input_0_String: 1
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setHost
      redisConfig0.setHost("1");
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getPoolMaxIdle());
  }

  @Test(timeout = 4000)
  public void test_setPassword_08()  throws Throwable  {
      //caseID:d0d10f359320b1301095008f5035f309
      //CoveredLines: [12, 50, 51]
      //Input_0_String: 1.0
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPassword
      redisConfig0.setPassword("1.0");
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getPort());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxIdle_09()  throws Throwable  {
      //caseID:24cc1e3cb0dd6650011388f00e01252c
      //CoveredLines: [12, 66, 67]
      //Input_0_int: -1
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxIdle
      redisConfig0.setPoolMaxIdle((-1));
      
      //Test Result Assert
      assertEquals((-1), redisConfig0.getPoolMaxIdle());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxTotal_10()  throws Throwable  {
      //caseID:2ac635877813835b3a8b30c545ff1a50
      //CoveredLines: [12, 58, 59]
      //Input_0_int: 3915
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxTotal
      redisConfig0.setPoolMaxTotal(3915);
      
      //Test Result Assert
      assertEquals(3915, redisConfig0.getPoolMaxTotal());
  }

  @Test(timeout = 4000)
  public void test_setPoolMaxWait_11()  throws Throwable  {
      //caseID:9ab08a98d9d792f624ab29ae0df73126
      //CoveredLines: [12, 74, 75]
      //Input_0_int: 1324
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPoolMaxWait
      redisConfig0.setPoolMaxWait(1324);
      
      //Test Result Assert
      assertEquals(1324, redisConfig0.getPoolMaxWait());
  }

  @Test(timeout = 4000)
  public void test_setPort_12()  throws Throwable  {
      //caseID:98b378d7184651428fe781c3bbb84967
      //CoveredLines: [12, 34, 35]
      //Input_0_int: 1
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setPort
      redisConfig0.setPort(1);
      
      //Test Result Assert
      assertEquals(1, redisConfig0.getPort());
  }

  @Test(timeout = 4000)
  public void test_setTimeout_13()  throws Throwable  {
      //caseID:70bb514c9165bd403c9b769c0310eea6
      //CoveredLines: [12, 42, 43]
      //Input_0_int: 0
      
      RedisConfig redisConfig0 = new RedisConfig();
      
      //Call method: setTimeout
      redisConfig0.setTimeout(0);
      
      //Test Result Assert
      assertEquals(0, redisConfig0.getTimeout());
  }
}
