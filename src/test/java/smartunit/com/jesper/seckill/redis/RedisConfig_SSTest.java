/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.redis.RedisConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisConfig_SSTest extends RedisConfig_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getHost_00()  throws Throwable  {
      //caseID:cf0a6bf518d5546e60cc8bc269c9962b
      RedisConfig redisConfig0 = new RedisConfig();
      String string0 = redisConfig0.getHost();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPassword_01()  throws Throwable  {
      //caseID:30e889a548832d363fa1e8bc55236cd9
      RedisConfig redisConfig0 = new RedisConfig();
      String string0 = redisConfig0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxTotal_02()  throws Throwable  {
      //caseID:343d8f8de1d57c8a7368b8950baecec4
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxTotal();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getTimeout_03()  throws Throwable  {
      //caseID:3bb5e70d6a978b19f7ae937e2cdc4acf
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getTimeout();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getPort_04()  throws Throwable  {
      //caseID:1633cc4c40b3ad68df60321bb29f84f7
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPort();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxWait_05()  throws Throwable  {
      //caseID:0c40b1966df4fdf78043b732e6350910
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxWait();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxIdle_06()  throws Throwable  {
      //caseID:5f77c4431253ca609d435157af980eb7
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxIdle();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxWait_07()  throws Throwable  {
      //caseID:93466b62964e7318f9305bb09a4e92e6
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxWait(0);

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getPoolMaxWait());
  }
  @Test(timeout = 4000)
  public void test_setTimeout_08()  throws Throwable  {
      //caseID:bff675fee0ebe9c54a79b8c047f8445a
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setTimeout(0);

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getTimeout());
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxIdle_09()  throws Throwable  {
      //caseID:e9ac998024d6aee673449c891d52ee81
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxIdle(543);

      //invoke method for redisConfig0
      assertEquals(543, redisConfig0.getPoolMaxIdle());
  }
  @Test(timeout = 4000)
  public void test_setPort_10()  throws Throwable  {
      //caseID:096fc0a14fb9930a9167855fcb533311
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPort(2008);

      //invoke method for redisConfig0
      assertEquals(2008, redisConfig0.getPort());
  }
  @Test(timeout = 4000)
  public void test_setPassword_11()  throws Throwable  {
      //caseID:84fe67833b84d4cfaea094a0dd9daaaf
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPassword("");

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getPort());
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxTotal_12()  throws Throwable  {
      //caseID:084b3d0a779ddd4ae5025578a03ebbc8
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxTotal(1);

      //invoke method for redisConfig0
      assertEquals(1, redisConfig0.getPoolMaxTotal());
  }
  @Test(timeout = 4000)
  public void test_setHost_13()  throws Throwable  {
      //caseID:7659cae6df4d891b6b431178c4487f36
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setHost("com.jesper.seckill.redis.RedisConfig");

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getPoolMaxTotal());
  }}
