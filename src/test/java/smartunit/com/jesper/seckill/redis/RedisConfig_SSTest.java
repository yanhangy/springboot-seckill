/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.jesper.seckill.redis;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.jesper.seckill.redis.RedisConfig;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RedisConfig_SSTest extends RedisConfig_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_getPassword_00()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      String string0 = redisConfig0.getPassword();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPort_01()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPort();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxWait_02()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxWait();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxTotal_03()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxTotal();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getTimeout_04()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getTimeout();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_getHost_05()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      String string0 = redisConfig0.getHost();
      assertNull(string0);
  }
  @Test(timeout = 4000)
  public void test_getPoolMaxIdle_06()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();
      int int0 = redisConfig0.getPoolMaxIdle();
      assertEquals(0, int0);
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxWait_07()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxWait(1125);

      //invoke method for redisConfig0
      assertEquals(1125, redisConfig0.getPoolMaxWait());
  }
  @Test(timeout = 4000)
  public void test_setPort_08()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPort(0);

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getPort());
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxTotal_09()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxTotal((-1));

      //invoke method for redisConfig0
      assertEquals((-1), redisConfig0.getPoolMaxTotal());
  }
  @Test(timeout = 4000)
  public void test_setTimeout_10()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setTimeout(1);

      //invoke method for redisConfig0
      assertEquals(1, redisConfig0.getTimeout());
  }
  @Test(timeout = 4000)
  public void test_setPoolMaxIdle_11()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPoolMaxIdle((-27));

      //invoke method for redisConfig0
      assertEquals((-27), redisConfig0.getPoolMaxIdle());
  }
  @Test(timeout = 4000)
  public void test_setHost_12()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setHost("1.0");

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getTimeout());
  }
  @Test(timeout = 4000)
  public void test_setPassword_13()  throws Throwable  {
      RedisConfig redisConfig0 = new RedisConfig();

      //invoke method for redisConfig0
      redisConfig0.setPassword("");

      //invoke method for redisConfig0
      assertEquals(0, redisConfig0.getPoolMaxWait());
  }}
